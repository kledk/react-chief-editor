{"version":3,"sources":["../../src/defaultTheme.tsx","../../src/chief/utils/with-chief-on-plugIn.tsx","../../src/chief/utils/create-editor.tsx","../../src/chief/chief-context.tsx","../../src/chief/chief.tsx","../../src/utils.ts","../../src/override-theme.tsx","../../src/chief/hooks/use-chief.tsx","../../src/chief/handlers/handleRenderLeaf.tsx","../../src/chief/utils/matches-type.tsx","../../src/chief/handlers/handleRenderElement.tsx","../../src/chief/editor.tsx","../../src/chief/handlers/handleDecorate.tsx","../../src/chief/handlers/handleKeyDown.tsx","../../src/chief/handlers/handleKeyUp.tsx","../../src/chief/chief-presentation.tsx","../../src/chief/hooks/use-labels.tsx","../../src/chief/hooks/use-on-key-down.tsx","../../src/chief/hooks/use-plugin.tsx","../../src/chief/hooks/use-render-element.tsx","../../src/chief/hooks/use-render-leaf.tsx","../../src/placeholder-hint.tsx","../../src/leaf-renderer.tsx","../../src/ui/ui-wrap.tsx","../../src/ui/button-base.tsx","../../src/ui/styled-toolbar-btn.tsx","../../src/ToolbarBtn.tsx","../../src/mark-button.tsx","../../src/shortcut.ts","../../src/addons/italic/index.tsx","../../src/addons/underline/index.tsx","../../src/addons/strikethrough/index.tsx","../../src/addons/headings/Heading.tsx","../../src/addons/headings/index.tsx","../../src/addons/hovering-tool/hovering-tool.tsx","../../src/chief/hooks/use-decoration.tsx","../../src/ToolBtnPopup.tsx","../../src/StyledToolBox.tsx","../../src/InputWrapper.tsx","../../src/addons/link/index.tsx","../../src/addons/prevent-newline/index.tsx","../../src/addons/reset-to-paragraph/index.tsx","../../src/addons/labels/index.tsx","../../src/addons/paragraph/paragraph-element.tsx","../../src/addons/paragraph/index.tsx","../../src/addons/bold/index.tsx","../../src/FileUpload.tsx","../../node_modules/ts-is-present/lib/index.js","../../src/addons/image/ImageExtensions.ts","../../src/show.tsx","../../src/element-wrapper.tsx","../../src/Focused.ts","../../src/ToolsWrapper.tsx","../../src/ui/StyledFocusToolbar.tsx","../../src/ui/WithAttentionToolbar.tsx","../../src/ui/button.tsx","../../src/addons/image/image-element.tsx","../../src/addons/image/index.tsx","../../src/element-utils.ts","../../src/addons/lists/transforms.ts","../../src/element-renderer.tsx","../../src/chief/chief-state.ts","../../src/addons/lists/controls.tsx","../../src/addons/lists/index.tsx","../../src/addons/block-tab/index.tsx","../../src/ToolDivider.tsx","../../src/addons/block-insert-tool/block-insert-controls.tsx","../../src/addons/block-insert-tool/block-insert.tsx","../../src/addons/hovering-tool/hover-tool-controls.tsx","../../src/addons/text-color/index.tsx","App.tsx","index.tsx"],"names":["defaultTheme","colors","primary","seconday","gray","100","200","300","400","500","600","700","800","900","originalEntries","createEditor","plugins","editor","useMemo","withReact","withHistory","createSlateEditor","Object","value","prop","editorFn","plugin","withChiefOnPlugIn","useChiefRenderCore","useState","setRenderLeafs","it","toSlicer","setRenderElements","removeRenderElement","ChiefContext","React","count","isChiefElement","element","Chief","theme","_theme","merge","chiefValue","props","Boolean","id","useRef","current","setOnKeyHandlers","a","b","onKeyDownHandlers","setInjectedPlugins","OnPlugins","labels","setInjectedLabels","setDecorations","removeDecoration","useProvideChiefContext","onChange","isNodeActive","selection","at","match","n","type","useOnClickOutside","ref","handler","useEffect","listener","event","document","getNodeFromSelection","Editor","path","getAncestor","level","parent","node","ReactEditor","e","OverrideTheme","name","useChief","ctx","useContext","Error","handleRenderLeaf","renderLeafs","copy","leaf","renderLeaf","children","matchesType","typeMatch","Array","handleRenderElement","renderElements","renderElement","RichEditor","insertBlock","Transforms","text","EditorThemeWrapper","styled","decorations","otherProps","useCallback","decorate","entry","ranges","result","handleDecorate","keyDown","isHotkey","handleKeyDown","keyUp","SlateEditor","handleKeyUp","click","paste","clipboardData","onDOMBeforeInput","onKeyDown","onKeyUp","onClick","onPaste","readOnly","SlatePresentationContext","useSlatePresentation","Element","Leaf","Children","child","key","i","ChiefPresentation","presenters","overrideRenderLeaf","injectRenderLeaf","presenter","injectRenderElement","overridedElement","overrideRenderElement","overridedLeaf","useLabels","injectLabels","getLabel","label","injectedLabels","useOnKeyDown","deps","chief","usePlugin","useRenderElement","ire","useRenderLeaf","irl","PlaceholderHint","leafType","rectType","elementProps","attributes","uiStyle","css","UiWrap","ButtonBase","StyledToolbarBtn","ToolbarBtn","containerRef","useHover","handleMouseOver","setValue","handleMouseOut","triggerRef","onMouseDown","show","tooltip","placement","container","target","arrowProps","style","StyledTooltipBody","Arrow","p","Tooltip","toggleFormat","format","isFormatted","isTextFormat","Text","split","MarkBtn","markType","useSlate","isActive","shortcutText","shortcut","toKeyName","italicControl","category","render","defaultLabel","_renderLeaf","Presenter","ItalicAddon","pattern","underlineControl","UnderlineAddon","strikethroughControl","StrikethroughAddon","Heading","useEditor","isFocused","useFocused","isSelected","useSelected","placeholder","h1","h2","h3","h4","h5","h6","isEmpty","undefined","headingTypes","headingBlockControls","headingContextControls","headingType","HeadingsAddon","Range","isHeadingType","header","HeadingBtn","heading","toggleHeading","hoverToolContext","useHighlightSelection","decoration","useDecoration","decorator","Node","highlightSelection","HoverToolProvider","enabled","saveSelection","perform","isEditorFocused","isCollapsed","currentNode","isVoid","isReadOnly","savedSelection","backgroundColor","setEnabled","setCtx","editorRef","sRef","setSaveSelection","setTimeout","fn","useProvideContext","onChangeEnabled","HoveringTool","deltaoffset","setDeltaOffset","toolRef","getBoundingClientRect","top","left","bottom","right","width","height","domNode","_setV","err","console","domSelection","window","domRange","deltaOffset","modifiers","options","offset","referenceElement","_v","zIndex","ToolBtnPopup","toolWindow","setShow","StyledToolBase","StyledToolBox","Input","InputWrapper","linkControl","Component","isLinkActive","renderContent","onClose","renderToolBtn","tprops","LinkAddon","insertText","isUrl","wrapLink","insertData","data","isInline","isLinkELement","href","url","unwrapLink","link","edge","LinkPopup","useHoverTool","linkWrapperRef","linkNode","_linkNode","setUrl","handleInsertLink","insertLink","handleUnlink","onSubmit","padding","display","minWidth","flexDirection","autoFocus","rounded","disabled","PreventNewlineAddon","ResetToParagraphAddon","deleteBackward","isParagraph","LabelsAddon","ParagraphElement","hoverHint","hint","ParagraphAddon","showHint","showPlaceholder","ParagraphPresenter","boldControl","BoldAddon","action","HiddenFileInput","FileUpload","defineProperty","exports","t","Show","ElementWrapper","isFocusedWithin","focus","Path","setFocus","onMouseEnter","setInside","onMouseLeave","position","when","ToolsWrapper","StyledFocusToolBtn","StyledFocusToolbar","WithAttentionToolbar","renderElementProps","attentionChildren","marginTop","marginRight","Button","ImageBlock","focused","selected","handleSubmitEmbed","embedUrl","align","setIsReplacing","handleDelete","onRemoved","handleUpload","onOpenFileRequest","handleResize","w","h","toggleReplace","handleClick","imageHandler","isReplacing","src","btns","justifyContent","contentEditable","onResize","resize","overflow","draggable","objectFit","alt","caption","setEmbedUrl","outline","StyledImageEmptyContainer","isImageElement","imageBlockControls","insertImage","image","getAllImageNodes","mode","anchor","findNodes","images","ImageAddon","fileRef","files","file","reader","handleFile","imageRef","onUploadedSuccess","onUploadedFailed","error","dataUrl","HistoryEditor","imageUrls","JSON","accept","multiple","toggleList","isElementActive","TYPE_LIST_ITEM","list","addionalProps","getState","point","isSelectionExpanded","isSelectionCollapsed","isElementEmpty","elementType","listControl","TYPE_ORDERED_LIST","TYPE_UNORDERED_LIST","LIST_TYPES","Ul","Ol","Li","_renderElement","ListsAddon","normalizeNode","includes","ancestor","active","getActiveNode","listParent","index","otherList","destination","to","BlockTabAddon","priority","ToolDivider","BlockInsertControls","controls","grouped","groupBy","k","groupedControls","control","renderButton","BlockInsertBtn","BlockInsert","toolboxRef","setShowMenu","hoveredNode","rootNode","firstDOMPoint","setNode","useHoveredNode","handleBlockInsert","showMenu","rect","setCoords","coords","HoverToolControls","eligableControls","renderControl","TextColorAddon","color","editorLabels","ContentStyle","div","App","addons","log","overrides","ui","marginLeft","Control","hoverTool","spellCheck","margin","minHeight","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.93454acc.chunk.js","sourcesContent":["import { ChiefEditorTheme } from \"./chief-editor-theme\";\n\nexport const defaultTheme: ChiefEditorTheme = {\n  colors: {\n    primary: \"#4299E1\",\n    seconday: \"#38B2AC\",\n    gray: {\n      100: \"#F7FAFC\",\n      200: \"#EDF2F7\",\n      300: \"#E2E8F0\",\n      400: \"#CBD5E0\",\n      500: \"#A0AEC0\",\n      600: \"#718096\",\n      700: \"#4A5568\",\n      800: \"#2D3748\",\n      900: \"#1A202C\"\n    }\n  }\n};\n","import { ReactEditor } from \"slate-react\";\nimport { OnPlugin } from \"../../addon\";\n\n// Use this to save the originals of the editor functions\nlet originalEntries = {};\n/**\n * Allows for dynamically hook in and out of plugins.\n * Only overriding functions of the Editor is supported.\n * @param editor\n * @param plugins\n */\nexport function withChiefOnPlugIn(editor: ReactEditor, plugins: OnPlugin[]) {\n  // We basically take control over each funtion in the editor and route them\n  // to the appropriate addon that has requested overriding it.\n  // This allows for us to use hooks that can mount and unmount.\n  for (const [prop, value] of Object.entries(editor)) {\n    if (typeof value === \"function\") {\n      if (!(prop in originalEntries)) {\n        originalEntries[prop] = value;\n      }\n      editor[prop] = (...args: any[]) => {\n        let editorFn = originalEntries[prop];\n        for (const plugin of plugins) {\n          if (plugin && prop in plugin) {\n            editorFn = plugin && plugin[prop](editorFn, editor);\n          }\n        }\n        return editorFn(...args);\n      };\n    }\n  }\n\n  return editor;\n}\n","import { useMemo } from \"react\";\nimport { ReactEditor, withReact } from \"slate-react\";\nimport { createEditor as createSlateEditor } from \"slate\";\nimport { withHistory } from \"slate-history\";\nimport { OnPlugin } from \"../../addon\";\nimport { withChiefOnPlugIn } from \"./with-chief-on-plugIn\";\n\nexport const createEditor = (plugins: OnPlugin[]): ReactEditor => {\n  const editor = useMemo(() => withReact(withHistory(createSlateEditor())), []);\n  return useMemo(() => withChiefOnPlugIn(editor, plugins), [plugins]);\n};\n","import React, { useState, useRef } from \"react\";\nimport { ReactEditor, Editable } from \"slate-react\";\nimport { OnPlugin } from \"../addon\";\nimport { KeyHandler } from \"./key-handler\";\nimport { createEditor } from \"./utils/create-editor\";\nimport {\n  InjectedRenderLeaf,\n  InjectedRenderElement,\n  InjectedLabels,\n  InjectedDecorator\n} from \"./chief\";\ninterface ChiefRenderCore {\n  injectRenderLeaf: (irl: InjectedRenderLeaf) => void;\n  removeRenderLeaf: (irl: InjectedRenderLeaf) => void;\n  renderLeafs: Array<InjectedRenderLeaf>;\n  injectRenderElement: (irl: InjectedRenderElement<any>) => void;\n  removeRenderElement: (irl: InjectedRenderElement<any>) => void;\n  renderElements: InjectedRenderElement[];\n}\n\nexport function useChiefRenderCore() {\n  const [renderLeafs, setRenderLeafs] = useState<InjectedRenderLeaf[]>([]);\n  const [renderElements, setRenderElements] = useState<InjectedRenderElement[]>(\n    []\n  );\n  function injectRenderLeaf(irl: InjectedRenderLeaf) {\n    setRenderLeafs(it => [...it, irl]);\n  }\n\n  function removeRenderLeaf(irl: InjectedRenderLeaf) {\n    setRenderLeafs(it => {\n      const toSlicer = [...it];\n      toSlicer.splice(toSlicer.indexOf(irl), 1);\n      return toSlicer;\n    });\n  }\n\n  function injectRenderElement(ire: InjectedRenderElement) {\n    setRenderElements(it => [...it, ire]);\n  }\n\n  function removeRenderElement(ire: InjectedRenderElement) {\n    setRenderElements(it => {\n      const toSlicer = [...it];\n      toSlicer.splice(it.indexOf(ire), 1);\n      return toSlicer;\n    });\n  }\n\n  return {\n    renderLeafs,\n    injectRenderLeaf,\n    removeRenderLeaf,\n    renderElements,\n    injectRenderElement,\n    removeRenderElement\n  };\n}\n\nexport interface ChiefContextValue extends ChiefRenderCore {\n  editor: ReactEditor;\n  readOnly: boolean;\n  setReadOnly: (readOnly: boolean) => void;\n  id: string;\n  injectOnKeyHandler: (keyHandler: KeyHandler) => void;\n  removeOnKeyHandler: (keyHandler: KeyHandler) => void;\n  onKeyDownHandlers: KeyHandler[];\n  injectPlugin: (plugin: OnPlugin) => void;\n  removePlugin: (plugin: OnPlugin) => void;\n  OnPlugins: OnPlugin[];\n  labels: InjectedLabels;\n  injectLabels: (labels: InjectedLabels) => void;\n  decorations: InjectedDecorator[];\n  injectDecoration: (decoration: InjectedDecorator) => void;\n  removeDecoration: (decoration: InjectedDecorator) => void;\n}\nexport const ChiefContext = React.createContext<ChiefContextValue | null>(null);\nlet count = 1;\nexport function useProvideChiefContext(props: {\n  readOnly?: boolean;\n  id?: string;\n}) {\n  const [injectedPlugins, setInjectedPlugins] = useState<OnPlugin[]>([]);\n  const [injectedLabels, setInjectedLabels] = useState<InjectedLabels>({});\n  const [onKeyHandlers, setOnKeyHandlers] = useState<KeyHandler[]>([]);\n  const [decorations, setDecorations] = useState<InjectedDecorator[]>([]);\n  const editor = createEditor(injectedPlugins);\n  const [readOnly, setReadOnly] = useState(Boolean(props.readOnly));\n  const { current: id } = useRef(props.id || `chiefeditor${count++}`);\n\n  function injectPlugin(plugin: OnPlugin) {\n    setInjectedPlugins(plugins => [...plugins, plugin]);\n  }\n\n  function removePlugin(plugin: OnPlugin) {\n    setInjectedPlugins(it => {\n      const toSlicer = [...it];\n      toSlicer.splice(toSlicer.indexOf(plugin), 1);\n      return toSlicer;\n    });\n  }\n\n  function injectOnKeyHandler(keyHandler: KeyHandler) {\n    setOnKeyHandlers(it =>\n      [...it, keyHandler].sort((a, b) =>\n        a.priority === b.priority ? 0 : a.priority === \"low\" ? 1 : -1\n      )\n    );\n  }\n\n  function removeOnKeyHandler(keyHandler: KeyHandler) {\n    setOnKeyHandlers(it => {\n      const toSlicer = [...it];\n      toSlicer.splice(it.indexOf(keyHandler), 1);\n      return toSlicer;\n    });\n  }\n\n  function injectDecoration(decorator: InjectedDecorator) {\n    setDecorations(it =>\n      [...it, decorator].sort((a, b) =>\n        a.priority === b.priority ? 0 : a.priority === \"low\" ? 1 : -1\n      )\n    );\n  }\n\n  function removeDecoration(decorator: InjectedDecorator) {\n    setDecorations(it => {\n      const toSlicer = [...it];\n      toSlicer.splice(it.indexOf(decorator), 1);\n      return toSlicer;\n    });\n  }\n\n  function injectLabels(labels: InjectedLabels) {\n    setInjectedLabels(it => ({ ...it, ...labels }));\n  }\n\n  const value: ChiefContextValue = {\n    ...useChiefRenderCore(),\n    editor,\n    readOnly,\n    setReadOnly,\n    id,\n    injectOnKeyHandler,\n    removeOnKeyHandler,\n    onKeyDownHandlers: onKeyHandlers,\n    injectPlugin,\n    removePlugin,\n    OnPlugins: injectedPlugins,\n    labels: injectedLabels,\n    injectLabels,\n    decorations,\n    injectDecoration,\n    removeDecoration\n  };\n\n  return value;\n}\n","import React, { useEffect } from \"react\";\nimport {\n  RenderLeafProps,\n  ReactEditor,\n  RenderElementProps,\n  Slate\n} from \"slate-react\";\nimport { Node, Element, NodeEntry, Range } from \"slate\";\nimport merge from \"lodash/merge\";\nimport { ChiefEditorTheme } from \"../chief-editor-theme\";\nimport { ThemeProvider } from \"styled-components\";\nimport { defaultTheme } from \"../defaultTheme\";\nimport { useProvideChiefContext, ChiefContext } from \"./chief-context\";\n\nexport function isChiefElement(element: unknown): element is ChiefElement {\n  return (element as ChiefElement).type !== undefined;\n}\n\nexport type ChiefElement = Element & {\n  type: string;\n};\n\nexport type ChiefRenderElementProps<\n  T extends ChiefElement = ChiefElement\n> = RenderElementProps & {\n  element: T;\n};\n\nexport type ElementTypeMatch = RegExp | string | string[];\n\nexport type InjectedRenderLeaf = {\n  renderLeaf: (\n    props: RenderLeafProps,\n    editor?: ReactEditor\n  ) => JSX.Element | undefined;\n};\n\nexport type InjectedRenderElement<T extends ChiefElement = ChiefElement> = {\n  typeMatch?: ElementTypeMatch;\n  Component?: React.FunctionComponent<ChiefRenderElementProps>;\n  renderElement?:\n    | JSX.Element\n    | ((\n        props: ChiefRenderElementProps<T>,\n        editor?: ReactEditor\n      ) => JSX.Element | undefined);\n};\n\nexport type InjectedLabels = { [key: string]: string | undefined };\nexport type Label = { key: string; defaultLabel: string };\n\nexport type InjectedDecorator = {\n  decorator: (\n    entry: NodeEntry<Node>,\n    editor: ReactEditor\n  ) => Range[] | undefined;\n  priority?: \"high\" | \"low\";\n};\n\nexport const Chief = React.memo(function(props: {\n  value: Node[];\n  onChange: (value: Node[]) => void;\n  children: React.ReactNode;\n  readOnly?: boolean;\n  id?: string;\n  theme?: ChiefEditorTheme & { [key: string]: any };\n}) {\n  const { children, onChange, value, readOnly, id, theme } = props;\n  const _theme = merge({}, defaultTheme, theme);\n  const chiefValue = useProvideChiefContext({ readOnly, id });\n\n  return (\n    <Slate editor={chiefValue.editor} value={value} onChange={onChange}>\n      <ChiefContext.Provider value={chiefValue}>\n        <ThemeProvider theme={_theme}>\n          <React.Fragment>{children}</React.Fragment>\n        </ThemeProvider>\n      </ChiefContext.Provider>\n    </Slate>\n  );\n});\n","import { useEffect, useCallback, useState, useRef } from \"react\";\nimport { Editor, Point, Node, Transforms, Location } from \"slate\";\nimport { ReactEditor } from \"slate-react\";\nimport { Range } from \"slate\";\n\nexport const isInside = (rect: ClientRect, x: number, y: number) => {\n  return (\n    x >= rect.left &&\n    x <= rect.left + rect.width &&\n    y >= rect.top &&\n    y <= rect.top + rect.height\n  );\n};\n\nexport const useGlobalHover = (element: HTMLElement | null) => {\n  const [over, setOver] = useState(false);\n\n  const handleMove = useCallback(\n    (event: MouseEvent) => {\n      if (element) {\n        const bounds = element.getBoundingClientRect();\n        setOver(isInside(bounds, event.clientX, event.clientY));\n      }\n    },\n    [element]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleMove);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMove);\n    };\n  }, [element]);\n  return over;\n};\n\nexport function useHover<T extends HTMLElement>(): [\n  React.RefObject<T>,\n  boolean\n] {\n  const [value, setValue] = useState(false);\n\n  const ref = useRef<T>(null);\n\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener(\"mouseover\", handleMouseOver);\n        node.addEventListener(\"mouseout\", handleMouseOut);\n\n        return () => {\n          node.removeEventListener(\"mouseover\", handleMouseOver);\n          node.removeEventListener(\"mouseout\", handleMouseOut);\n        };\n      }\n      return undefined;\n    },\n    [ref.current] // Recall only if ref changes\n  );\n\n  return [ref, value];\n}\n\nexport const getActiveNode = (editor: ReactEditor) => {\n  if (editor.selection) {\n    const [, path] = Editor.node(editor, editor.selection);\n    if (path.length) {\n      const [parent] = Editor.parent(editor, path);\n      return parent;\n    }\n  }\n  return null;\n};\n\nexport const getActiveNodeType = (editor: ReactEditor) => {\n  const block = getActiveNode(editor);\n  return block ? block.type : null;\n};\n\nexport const clone = (value: any) => {\n  return JSON.parse(JSON.stringify(value));\n};\n\ninterface State {\n  node: Node | null;\n  point: Point | null;\n  selection: Range | null;\n}\n\nexport const useLastFocused = (editor: ReactEditor) => {\n  const [state, setState] = useState<State>({\n    node: null,\n    point: null,\n    selection: null\n  });\n  const { selection } = editor;\n  const current = getActiveNodeType(editor);\n\n  useEffect(() => {\n    if (!ReactEditor.isFocused(editor)) {\n      return;\n    }\n    if (!selection) {\n      return;\n    }\n    if (current) {\n      const point = selection.focus;\n      const [node] = Editor.parent(editor, point);\n      if (Node.isNode(node)) {\n        setState({ node, point, selection: clone(selection) });\n      }\n    }\n  }, [current, selection]);\n\n  return state;\n};\n\nexport const isBlockEmpty = (editor: Editor, location?: Location) => {\n  let selection: Location | null = editor.selection;\n  if (location) {\n    selection = location;\n  }\n  if (selection) {\n    const [node] = Editor.node(editor, selection);\n    return Node.string(node).length === 0;\n  }\n\n  return false;\n};\n\nexport const toggleBlock = (editor: Editor, type: string) => {\n  const isActive = isNodeActive(editor, type);\n\n  Transforms.setNodes(editor, {\n    type: isActive ? \"paragraph\" : type\n  });\n};\n\nexport const isNodeActive = (editor: Editor, type: string) => {\n  const { selection } = editor;\n  if (!selection) {\n    return false;\n  }\n  const [match] = Editor.nodes(editor, {\n    at: selection,\n    match: n => n.type === type\n  });\n  return !!match;\n};\n\nexport function useOnClickOutside(\n  ref: React.MutableRefObject<any>,\n  handler: (event: MouseEvent | TouchEvent) => void\n) {\n  useEffect(\n    () => {\n      const listener = (event: MouseEvent | TouchEvent) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n}\n\nexport function getNodeFromSelection(editor: Editor, selection: Range | null) {\n  if (selection) {\n    const [, path] = Editor.node(editor, selection);\n    if (path.length) {\n      const [parent] = Editor.parent(editor, path);\n      return parent;\n    }\n  }\n  return null;\n}\n\nexport const findNodes = (editor: Editor, match: (node: Node) => boolean) => {\n  return Editor.nodes(editor, {\n    mode: \"all\",\n    at: {\n      anchor: Editor.start(editor, []),\n      focus: Editor.end(editor, [])\n    },\n    match\n  });\n};\n\nexport const getAncestor = (editor: ReactEditor, node: Node, level = 1) => {\n  let parent: Node | null = null;\n  let count = 0;\n  while (node && count !== level) {\n    count++;\n    try {\n      const path = ReactEditor.findPath(editor, node);\n      if (path.length === 0) {\n        return null;\n      }\n      parent = Editor.parent(editor, path)[0];\n      if (parent === editor) {\n        return null;\n      }\n      node = parent;\n    } catch (e) {}\n  }\n  return parent;\n};\n","import { css } from \"styled-components\";\nexport function OverrideTheme(\n  name: string,\n  props: {\n    theme: {\n      overrides?: {\n        [key: string]: ReturnType<typeof css>;\n      };\n    };\n  }\n) {\n  if (props.theme.overrides && props.theme.overrides[name]) {\n    return props.theme.overrides[name];\n  }\n  return undefined;\n}\n","import { useContext } from \"react\";\nimport { ChiefContext } from \"../chief-context\";\n\nexport function useChief() {\n  const ctx = useContext(ChiefContext);\n  if (!ctx) {\n    throw new Error(\n      'Chief context not found. Wrap your <Chief.Editor/> in a <Chief/> before using \"useChief()\"'\n    );\n  }\n  return ctx;\n}\n","import React from \"react\";\nimport { ReactEditor, RenderLeafProps } from \"slate-react\";\nimport { InjectedRenderLeaf } from \"../chief\";\nexport function handleRenderLeaf(\n  props: RenderLeafProps,\n  renderLeafs: InjectedRenderLeaf[],\n  editor?: ReactEditor\n) {\n  let copy = { ...props };\n  for (const renderLeaf of renderLeafs) {\n    const leaf = renderLeaf.renderLeaf(copy, editor);\n    if (leaf) {\n      copy = { ...copy, children: leaf };\n    }\n  }\n  return <span {...copy.attributes}>{copy.children}</span>;\n}\n","import { ElementTypeMatch, ChiefElement } from \"../chief\";\n\nexport function matchesType(\n  element: ChiefElement,\n  typeMatch?: ElementTypeMatch\n): element is ChiefElement {\n  return (\n    (Array.isArray(typeMatch) && typeMatch.includes(element.type)) ||\n    (typeof typeMatch === \"string\" && typeMatch === element.type) ||\n    Boolean(typeMatch instanceof RegExp && element.type.match(typeMatch))\n  );\n}\n","import React from \"react\";\nimport { ReactEditor } from \"slate-react\";\nimport { InjectedRenderElement, ChiefRenderElementProps } from \"../chief\";\nimport { matchesType } from \"../utils/matches-type\";\n\nexport function handleRenderElement(\n  props: ChiefRenderElementProps,\n  renderElements: InjectedRenderElement[],\n  editor?: ReactEditor\n) {\n  let element: JSX.Element | undefined;\n  for (let renderElement of renderElements) {\n    if (\n      renderElement.typeMatch === undefined ||\n      matchesType(props.element, renderElement.typeMatch)\n    ) {\n      if (renderElement.Component) {\n        element = <renderElement.Component {...props} />;\n      } else if (renderElement.renderElement) {\n        element =\n          typeof renderElement.renderElement === \"function\"\n            ? renderElement.renderElement(props, editor)\n            : React.cloneElement(renderElement.renderElement, props) || element;\n      }\n    }\n  }\n\n  return (element = element || <React.Fragment>{null}</React.Fragment>);\n}\n","import React, { useCallback } from \"react\";\nimport merge from \"lodash/merge\";\nimport orderBy from \"lodash/orderBy\";\nimport { Editor as SlateEditor, NodeEntry, Transforms } from \"slate\";\nimport {\n  Editable,\n  ReactEditor,\n  RenderElementProps,\n  RenderLeafProps\n} from \"slate-react\";\nimport styled from \"styled-components\";\nimport { isNodeActive } from \"../utils\";\nimport { OverrideTheme } from \"../override-theme\";\nimport { ChiefRenderElementProps } from \"./chief\";\nimport { useChief } from \"./hooks/use-chief\";\nimport { handleDecorate } from \"./handlers/handleDecorate\";\nimport { handleClick } from \"./handlers/handleClick\";\nimport { handleKeyUp } from \"./handlers/handleKeyUp\";\nimport { handleKeyDown } from \"./handlers/handleKeyDown\";\nimport { handleRenderLeaf } from \"./handlers/handleRenderLeaf\";\nimport { handleRenderElement } from \"./handlers/handleRenderElement\";\n\nexport const RichEditor = {\n  ...ReactEditor,\n  insertBlock(editor: SlateEditor, blockType: string) {\n    if (!isNodeActive(editor, blockType)) {\n      Transforms.setNodes(editor, {\n        type: blockType,\n        children: [{ text: \"\" }]\n      });\n    } else {\n      Transforms.insertNodes(editor, {\n        type: blockType,\n        children: [{ text: \"\" }]\n      });\n    }\n  }\n};\n\nconst EditorThemeWrapper = styled.div`\n  ${props => OverrideTheme(\"Editor\", props)}\n`;\n\nexport const Editor = React.memo(\n  (\n    props: {\n      children?: React.ReactNode;\n    } & React.ComponentProps<typeof Editable>\n  ) => {\n    const {\n      editor,\n      readOnly,\n      id,\n      renderLeafs,\n      renderElements,\n      onKeyDownHandlers,\n      decorations\n    } = useChief();\n    const { children, ...otherProps } = props;\n\n    const renderElement = useCallback(\n      (props: RenderElementProps) => {\n        return handleRenderElement(\n          props as ChiefRenderElementProps,\n          renderElements,\n          editor\n        );\n      },\n      [renderElements]\n    );\n\n    const renderLeaf = useCallback(\n      (props: RenderLeafProps) => {\n        return handleRenderLeaf(props, renderLeafs, editor);\n      },\n      [renderLeafs]\n    );\n\n    const decorate = useCallback(\n      (entry: NodeEntry) => handleDecorate(entry, editor, decorations),\n      [decorations]\n    );\n\n    const keyDown = useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        return handleKeyDown(event, editor, onKeyDownHandlers);\n      },\n      [onKeyDownHandlers]\n    );\n\n    // TODO\n    const keyUp = useCallback((event: React.KeyboardEvent<HTMLDivElement>) => {\n      handleKeyUp(event, editor);\n    }, []);\n    //TODO\n    const click = useCallback(\n      (event: React.MouseEvent<HTMLElement>) => handleClick(event, editor, []),\n      []\n    );\n\n    const paste = useCallback((event: React.ClipboardEvent<HTMLDivElement>) => {\n      const clipboardData = event.clipboardData;\n      const pastedData = clipboardData.getData(\"Text\");\n      if (!pastedData) {\n        return;\n      }\n      // editor.insertText(pastedData);\n    }, []);\n\n    // TODO\n    const onDOMBeforeInput = useCallback(e => {}, []);\n\n    return (\n      <React.Fragment>\n        <EditorThemeWrapper>\n          {children}\n          <Editable\n            onDOMBeforeInput={onDOMBeforeInput}\n            renderLeaf={renderLeaf}\n            renderElement={renderElement}\n            decorate={decorate}\n            onKeyDown={keyDown}\n            onKeyUp={keyUp}\n            onClick={click}\n            onPaste={paste}\n            readOnly={readOnly}\n            id={`${id}`}\n            {...otherProps}\n          />\n        </EditorThemeWrapper>\n      </React.Fragment>\n    );\n  }\n);\n","import { NodeEntry, Range } from \"slate\";\nimport { ReactEditor } from \"slate-react\";\nimport { InjectedDecorator } from \"../chief\";\n// TODO\nexport const handleDecorate = (\n  entry: NodeEntry,\n  editor: ReactEditor,\n  decorators: InjectedDecorator[]\n) => {\n  let ranges: Range[] = [];\n  for (let decorate of decorators) {\n    const result = decorate.decorator(entry, editor);\n    if (result) {\n      return (ranges = ranges.concat(result));\n    }\n  }\n  return ranges;\n};\n","import React from \"react\";\nimport { ReactEditor } from \"slate-react\";\nimport { KeyHandler } from \"../key-handler\";\nimport isHotkey from \"is-hotkey\";\nexport const handleKeyDown = (\n  event: React.KeyboardEvent<HTMLDivElement>,\n  editor: ReactEditor,\n  onKeyHandlers: KeyHandler[]\n) => {\n  for (let handler of onKeyHandlers) {\n    if (handler.pattern) {\n      if (isHotkey(handler.pattern, event.nativeEvent) &&\n        handler.handler(event.nativeEvent, editor)) {\n        return;\n      }\n    }\n    else {\n      if (handler.handler(event.nativeEvent, editor)) {\n        return;\n      }\n    }\n  }\n};\n","import React from \"react\";\nimport {\n  Editor as SlateEditor,\n  Location\n} from \"slate\";\nimport { ReactEditor } from \"slate-react\";\nexport const handleKeyUp = (\n  event: React.KeyboardEvent<HTMLDivElement>,\n  editor: ReactEditor\n) => {\n  const { selection } = editor;\n  if (!selection) {\n    return;\n  }\n  const [, path] = SlateEditor.node(editor, selection as Location);\n  if (!path.length) {\n    return;\n  }\n  const [parent] = SlateEditor.parent(editor, path);\n  if (parent) {\n    // TODO: implement some kind of trigger\n    // for (let addon of addons) {\n    //   if (addon.triggers) {\n    //     for (let trigger of plugin.triggers) {\n    //       const matches = findMatches(trigger.pattern, trigger.range, editor);\n    //       if (matches.length) {\n    //         plugin.onTrigger && plugin.onTrigger(editor, matches, trigger);\n    //         return;\n    //       }\n    //     }\n    //   }\n    // }\n  }\n};\n","import React, { ReactNode, useCallback, useEffect } from \"react\";\nimport { RenderLeafProps } from \"slate-react\";\nimport { Node } from \"slate\";\nimport { handleRenderElement } from \"./handlers/handleRenderElement\";\nimport {\n  ChiefRenderElementProps,\n  InjectedRenderLeaf,\n  InjectedRenderElement,\n  ChiefElement\n} from \"./chief\";\nimport { handleRenderLeaf } from \"./handlers/handleRenderLeaf\";\nimport { useChiefRenderCore } from \"./chief-context\";\n\nexport type iPresenter<T extends ChiefElement = any> = {\n  element?: InjectedRenderElement<T>;\n  leaf?: InjectedRenderLeaf;\n};\n\ntype PresenterElementProps = Omit<ChiefRenderElementProps, \"attributes\">;\ntype PresenterLeafProps = Omit<RenderLeafProps, \"attributes\">;\ntype PresenterElement = PresenterElementProps[\"element\"];\n\ninterface SlatePresentationContextValue {\n  renderElement: (props: PresenterElementProps) => ReactNode;\n  renderLeaf: (props: PresenterLeafProps) => ReactNode;\n}\n\nconst SlatePresentationContext = React.createContext<SlatePresentationContextValue | null>(\n  null\n);\n\nfunction useSlatePresentation() {\n  const ctx = React.useContext(SlatePresentationContext);\n  if (!ctx) {\n    throw new Error(\"No SlatePresentationContext\");\n  }\n  return ctx;\n}\n\nfunction isElement(value: any) {\n  return value instanceof Object && Array.isArray(value.children);\n}\n\nfunction Element(props: { element: PresenterElement }) {\n  const { renderElement } = useSlatePresentation();\n  const { element } = props;\n  return (\n    <React.Fragment>\n      {renderElement({\n        children: <Children children={element.children} />,\n        element\n      })}\n    </React.Fragment>\n  );\n}\n\nfunction Leaf({ leaf = { text: \"\" } }: any) {\n  const { renderLeaf } = useSlatePresentation();\n\n  return (\n    <React.Fragment>\n      {renderLeaf({\n        children: <span>{leaf.text}</span>,\n        leaf,\n        text: leaf.text\n      })}\n    </React.Fragment>\n  );\n}\n\nfunction Children(props: { children: Node[] }) {\n  const { children } = props;\n  return (\n    <React.Fragment>\n      {children.map((child: any, i: number) => {\n        if (isElement(child)) {\n          return <Element key={i} element={child} />;\n        } else {\n          return <Leaf key={i} leaf={child} />;\n        }\n      })}\n    </React.Fragment>\n  );\n}\n\nexport function ChiefPresentation({\n  value = [],\n  presenters = [],\n  overrideRenderElement,\n  overrideRenderLeaf\n}: {\n  value: Node[];\n  presenters: iPresenter[];\n  overrideRenderElement?: (\n    props: PresenterElementProps\n  ) => JSX.Element | undefined;\n  overrideRenderLeaf?: (props: PresenterLeafProps) => JSX.Element | undefined;\n}) {\n  const {\n    renderLeafs,\n    renderElements,\n    injectRenderElement,\n    injectRenderLeaf\n  } = useChiefRenderCore();\n\n  useEffect(() => {\n    for (const presenter of presenters) {\n      if (presenter.element) {\n        injectRenderElement(presenter.element);\n      }\n      if (presenter.leaf) {\n        injectRenderLeaf(presenter.leaf);\n      }\n    }\n  }, []);\n\n  return (\n    <SlatePresentationContext.Provider\n      value={{\n        renderElement: useCallback(\n          (props: PresenterElementProps) => {\n            const overridedElement =\n              overrideRenderElement && overrideRenderElement(props);\n            if (overridedElement) {\n              return overridedElement;\n            }\n            return handleRenderElement(props as any, renderElements);\n          },\n          [renderElements]\n        ),\n        renderLeaf: useCallback(\n          (props: PresenterLeafProps) => {\n            const overridedLeaf =\n              overrideRenderLeaf && overrideRenderLeaf(props);\n            if (overridedLeaf) {\n              return overridedLeaf;\n            }\n            return handleRenderLeaf(props as any, renderLeafs);\n          },\n          [renderLeafs]\n        )\n      }}\n    >\n      <Children children={value} />\n    </SlatePresentationContext.Provider>\n  );\n}\n","import { useEffect, useCallback } from \"react\";\nimport { InjectedLabels, Label } from \"../chief\";\nimport { useChief } from \"./use-chief\";\n\nexport function useLabels(labels?: InjectedLabels) {\n  const { labels: injectedLabels, injectLabels } = useChief();\n  const getLabel = useCallback(\n    (label: Label) => {\n      if (typeof injectedLabels[label.key] === \"string\") {\n        return injectedLabels[label.key];\n      }\n      return label.defaultLabel;\n    },\n    [injectedLabels]\n  );\n\n  useEffect(() => {\n    if (labels) {\n      injectLabels(labels);\n    }\n  }, []);\n\n  return [getLabel, injectLabels] as const;\n}\n","import { useEffect } from \"react\";\nimport { useChief } from \"./use-chief\";\nimport { KeyHandler } from \"../key-handler\";\n/**\n * Respond to onKeyDown events in the editor.\n * If you want to receive all onKeyDown events, you can leave out the pattern.\n * For responding to certain key down combos, you can specify a key pattern, eg. \"mod+b\".\n * @param handler Function to call when a key or combo is pressed\n * @param overrides\n * @param deps\n */\n\nexport function useOnKeyDown(handler: KeyHandler, deps: any[] = []) {\n  const chief = useChief();\n  useEffect(() => {\n    chief.injectOnKeyHandler(handler);\n    return () => chief.removeOnKeyHandler(handler);\n  }, deps);\n}\n","import { useEffect } from \"react\";\nimport { OnPlugin } from \"../../addon\";\nimport { useChief } from \"./use-chief\";\n\nexport function usePlugin(plugin: OnPlugin) {\n  const chief = useChief();\n  useEffect(() => {\n    chief.injectPlugin(plugin);\n    return () => chief.removePlugin(plugin);\n  }, []);\n}\n","import { useEffect } from \"react\";\nimport { ChiefElement, InjectedRenderElement } from \"../chief\";\nimport { useChief } from \"./use-chief\";\n\nexport function useRenderElement<T extends ChiefElement = ChiefElement>(\n  ire: InjectedRenderElement<T>,\n  deps: any[] = []\n) {\n  const chief = useChief();\n  useEffect(() => {\n    chief.injectRenderElement(ire);\n    return () => chief.removeRenderElement(ire);\n  }, deps);\n}\n","import { useEffect } from \"react\";\nimport { InjectedRenderLeaf } from \"../chief\";\nimport { useChief } from \"./use-chief\";\n\nexport function useRenderLeaf(irl: InjectedRenderLeaf, deps: any[] = []) {\n  const chief = useChief();\n  useEffect(() => {\n    chief.injectRenderLeaf(irl);\n    return () => chief.removeRenderLeaf(irl);\n  }, deps);\n}\n","import styled from \"styled-components\";\nimport { OverrideTheme } from \"./override-theme\";\n\nexport const PlaceholderHint = styled.span<{\n  isEmpty: boolean;\n  placeholder?: string;\n  hoverHint?: string;\n}>`\n  display: inline-block;\n  width: 100%;\n  ::before {\n    filter: brightness(40%) invert(50%) opacity(0.2) grayscale(100%);\n    content: \"${props =>\n      props.isEmpty && props.placeholder && props.placeholder.length > 0\n        ? props.placeholder\n        : ``}\"\n;\n    pointer-events: none;\n    user-select: none;\n    position: absolute;\n  }\n  &:hover:before {\n    content: \"${props =>\n      props.isEmpty && props.hoverHint && !props.placeholder\n        ? props.hoverHint\n        : props.isEmpty && props.placeholder\n        ? props.placeholder\n        : \"\"}\";\n  }\n  ${props => OverrideTheme(\"PlaceholderHint\", props)}\n`;\n","import React, { memo, ReactNode } from \"react\";\nimport { RenderLeafProps } from \"slate-react\";\n\nexport function renderLeaf(\n  props: RenderLeafProps,\n  leafType: string,\n  rectType: Parameters<typeof React.createElement>[\"0\"],\n  elementProps?: Parameters<typeof React.createElement>[\"1\"]\n) {\n  const { children, leaf } = props;\n  if (leaf[leafType]) {\n    return (\n      <Leaf {...props}>\n        {React.createElement(rectType, elementProps, children)}\n      </Leaf>\n    );\n  }\n  return undefined;\n}\n\nconst Leaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props;\n  return <span {...attributes} children={children} />;\n};\n","import styled, { css } from \"styled-components\";\nimport { OverrideTheme } from \"../override-theme\";\n\nexport const uiStyle = css`\n  font-size: 14px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: normal;\n  ${props => OverrideTheme(\"ui\", props)}\n`;\n\nexport const UiWrap = styled.div`\n  ${uiStyle}\n`;\n","import styled from \"styled-components\";\nimport { OverrideTheme } from \"../override-theme\";\nimport { uiStyle } from \"./ui-wrap\";\nexport const ButtonBase = styled.button`\n  ${uiStyle}\n  line-height: 1.15;\n  margin: 0;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n  ${props => OverrideTheme(\"ButtonBase\", props)}\n`;\n","import styled from \"styled-components\";\nimport { ButtonBase } from \"./button-base\";\nimport { OverrideTheme } from \"../override-theme\";\n\nexport const StyledToolbarBtn = styled(ButtonBase)<{\n  isActive?: boolean;\n  rounded?: boolean;\n}>`\n  width: 100%;\n  transition: all 250ms;\n  background-color: white;\n  &:hover {\n    background-color: ${props =>\n      props.disabled ? undefined : props.theme.colors.gray[200]};\n  }\n  &:active {\n    background-color: ${props => props.theme.colors.gray[100]};\n  }\n  &:first-child {\n    padding-left: 10px;\n  }\n  &:last-child {\n    padding-right: 10px;\n  }\n  border-radius: ${props => (props.rounded ? \"5px\" : undefined)};\n  padding: 8px;\n  color: ${props => (props.isActive ? props.theme.colors.primary : undefined)};\n  border: none;\n  ${props => OverrideTheme(\"StyledToolbarBtn\", props)}\n`;\n","import React, { useRef } from \"react\";\nimport { StyledToolbarBtn } from \"./ui/styled-toolbar-btn\";\nimport Overlay from \"react-overlays/Overlay\";\nimport { useHover } from \"./utils\";\nimport styled, { css } from \"styled-components\";\nimport { Label } from \"./chief/chief\";\nimport { useLabels } from \"./chief/hooks/use-labels\";\n\nexport type Ref = HTMLElement;\n\ntype Props = {\n  tooltip?: {\n    label: Label;\n    shortcut?: string;\n    placement?: React.ComponentProps<typeof Overlay>[\"placement\"];\n  };\n  onMouseDown?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onClick?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & React.ComponentProps<typeof StyledToolbarBtn>;\n\nexport const ToolbarBtn = React.forwardRef<Ref, Props>((props, ref) => {\n  const { onClick, onMouseDown, tooltip, ...otherProps } = props;\n  const containerRef = useRef(null);\n  const [triggerRef, show] = useHover<HTMLDivElement>();\n  const [labels] = useLabels();\n\n  return (\n    <div ref={containerRef}>\n      <div ref={triggerRef}>\n        <StyledToolbarBtn\n          ref={ref}\n          onMouseDown={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n            if (onClick) {\n              onClick(e);\n              return;\n            }\n            onMouseDown && onMouseDown(e);\n          }}\n          {...otherProps}\n        />\n      </div>\n      <Overlay\n        show={tooltip && show}\n        placement={tooltip?.placement || \"top\"}\n        container={containerRef}\n        target={triggerRef}\n      >\n        {({ props, arrowProps, placement }) => (\n          <Tooltip {...props} placement={placement}>\n            <Arrow\n              {...arrowProps}\n              placement={placement}\n              style={arrowProps.style}\n            />\n            {tooltip && (\n              <StyledTooltipBody>\n                <div>\n                  <strong>{labels(tooltip.label)}</strong>\n                </div>\n                <div>{tooltip.shortcut}</div>\n              </StyledTooltipBody>\n            )}\n          </Tooltip>\n        )}\n      </Overlay>\n    </div>\n  );\n});\n\nconst StyledTooltipBody = styled.div`\n  font-size: 0.8em;\n  padding: 3px 8px;\n  color: #fff;\n  text-align: center;\n  border-radius: 3px;\n  background-color: #000;\n  div:nth-child(1) {\n  }\n  div:nth-child(2) {\n    font-weight: bold;\n    font-size: 0.7em;\n    color: ${props => props.theme.colors.gray[400]};\n  }\n`;\n\nconst Arrow = styled.div<{ placement: string }>`\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-style: solid;\n\n  ${p => {\n    switch (p.placement) {\n      case \"left\":\n        return css`\n          right: 0;\n          border-width: 5px 0 5px 5px;\n          border-color: transparent transparent transparent #000;\n        `;\n      case \"right\":\n        return css`\n          left: 0;\n          border-width: 5px 5px 5px 0;\n          border-color: transparent #232323 transparent transparent;\n        `;\n      case \"top\":\n        return css`\n          bottom: 0;\n          border-width: 5px 5px 0;\n          border-color: #232323 transparent transparent transparent;\n        `;\n      case \"bottom\":\n        return css`\n          top: 0;\n          border-width: 0 5px 5px;\n          border-color: transparent transparent #232323 transparent;\n        `;\n      default:\n        return \"\";\n    }\n  }}\n`;\n\nconst Tooltip = styled.div<{ placement: string }>`\n  position: absolute;\n  padding: 0 5px;\n\n  ${p => {\n    switch (p.placement) {\n      case \"left\":\n        return css`\n          padding: 0 5px;\n        `;\n      case \"right\":\n        return css`\n          padding: 0 5px;\n        `;\n      case \"top\":\n        return css`\n          padding: 5px 0;\n        `;\n      case \"bottom\":\n        return css`\n          padding: 5px 0;\n        `;\n      default:\n        return \"\";\n    }\n  }}\n`;\n","import React from \"react\";\nimport { useSlate } from \"slate-react\";\nimport { ToolbarBtn } from \"./ToolbarBtn\";\nimport { Editor, Transforms, Text } from \"slate\";\nimport { useLabels } from \"./chief/hooks/use-labels\";\n\nexport function toggleFormat(editor: Editor, format: string) {\n  let isFormatted = isTextFormat(editor, format);\n  Transforms.setNodes(\n    editor,\n    { [format]: !isFormatted },\n    { match: n => Text.isText(n), split: true }\n  );\n}\n\nconst isTextFormat = (editor: Editor, formatType: string) => {\n  const [match] = Editor.nodes(editor, {\n    match: n => Boolean(n[formatType])\n  });\n  return Boolean(match);\n};\n\nexport function MarkBtn(\n  props: {\n    markType: string;\n  } & React.ComponentProps<typeof ToolbarBtn>\n) {\n  const { markType: formatType, ...otherProps } = props;\n  const editor = useSlate();\n  const isActive = isTextFormat(editor, props.markType);\n  return (\n    <ToolbarBtn\n      isActive={isActive}\n      onMouseDown={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        toggleFormat(editor, props.markType);\n      }}\n      {...otherProps}\n    />\n  );\n}\n","import { toKeyName } from \"is-hotkey\";\n\nexport function shortcutText(shortcut: string) {\n  return toKeyName(shortcut).replace(\"mod\", \"⌘\").toUpperCase();\n}\n","import React from \"react\";\nimport { AddonProps } from \"../../addon\";\nimport { renderLeaf } from \"../../leaf-renderer\";\nimport { MarkBtn, toggleFormat } from \"../../mark-button\";\nimport { useRenderLeaf } from \"../../chief/hooks/use-render-leaf\";\nimport { useOnKeyDown } from \"../../chief/hooks/use-on-key-down\";\nimport { useLabels } from \"../../chief/hooks/use-labels\";\nimport { shortcutText } from \"../../shortcut\";\nimport { Control } from \"../../control\";\nimport { InjectedRenderLeaf } from \"../../chief\";\nimport { iPresenter } from \"../../chief/chief-presentation\";\n\nconst shortcut = \"mod+i\";\n\nexport const italicControl: Control = {\n  category: \"marks\",\n  render: () => {\n    return (\n      <MarkBtn\n        tooltip={{\n          label: {\n            key: \"marks.italic\",\n            defaultLabel: \"Italic\"\n          },\n          shortcut: shortcutText(shortcut)\n        }}\n        markType=\"italic\"\n      >\n        I\n      </MarkBtn>\n    );\n  }\n};\n\nconst _renderLeaf: InjectedRenderLeaf = {\n  renderLeaf: props => renderLeaf(props, \"italic\", \"em\")\n};\n\nconst Presenter: iPresenter = {\n  leaf: _renderLeaf\n};\n\nexport function ItalicAddon(props: AddonProps) {\n  useLabels(props.labels);\n  useRenderLeaf(_renderLeaf);\n  useOnKeyDown({\n    pattern: shortcut,\n    handler: (event, editor) => {\n      event.preventDefault();\n      toggleFormat(editor, \"italic\");\n      return true;\n    }\n  });\n  return null;\n}\n\nItalicAddon.Presenter = Presenter;\n","import React from \"react\";\nimport { AddonProps } from \"../../addon\";\nimport { renderLeaf } from \"../../leaf-renderer\";\nimport { MarkBtn, toggleFormat } from \"../../mark-button\";\nimport { useRenderLeaf } from \"../../chief/hooks/use-render-leaf\";\nimport { useOnKeyDown } from \"../../chief/hooks/use-on-key-down\";\nimport { useLabels } from \"../../chief/hooks/use-labels\";\nimport { shortcutText } from \"../../shortcut\";\nimport { Control } from \"../../control\";\nimport { InjectedRenderLeaf } from \"../../chief\";\nimport { iPresenter } from \"../../chief/chief-presentation\";\n\nconst shortcut = \"mod+u\";\n\nexport const underlineControl: Control = {\n  category: \"marks\",\n  render: () => {\n    return (\n      <MarkBtn\n        tooltip={{\n          label: {\n            key: \"marks.underline\",\n            defaultLabel: \"Underline\"\n          },\n          shortcut: shortcutText(shortcut)\n        }}\n        markType=\"underline\"\n      >\n        U\n      </MarkBtn>\n    );\n  }\n};\n\nconst _renderLeaf: InjectedRenderLeaf = {\n  renderLeaf: props => renderLeaf(props, \"underline\", \"u\")\n};\n\nconst Presenter: iPresenter = {\n  leaf: _renderLeaf\n};\n\nexport function UnderlineAddon(props: AddonProps) {\n  useLabels(props.labels);\n  useRenderLeaf(_renderLeaf);\n  useOnKeyDown({\n    pattern: shortcut,\n    handler: (event, editor) => {\n      event.preventDefault();\n      toggleFormat(editor, \"underline\");\n      return true;\n    }\n  });\n  return null;\n}\n\nUnderlineAddon.Presenter = Presenter;\n","import React from \"react\";\nimport { AddonProps } from \"../../addon\";\nimport { renderLeaf } from \"../../leaf-renderer\";\nimport { MarkBtn, toggleFormat } from \"../../mark-button\";\nimport { useRenderLeaf } from \"../../chief/hooks/use-render-leaf\";\nimport { useOnKeyDown } from \"../../chief/hooks/use-on-key-down\";\nimport { useLabels } from \"../../chief/hooks/use-labels\";\nimport { shortcutText } from \"../../shortcut\";\nimport { Control } from \"../../control\";\nimport { InjectedRenderLeaf } from \"../../chief\";\nimport { iPresenter } from \"../../chief/chief-presentation\";\n\nconst shortcut = \"mod+s\";\n\nexport const strikethroughControl: Control = {\n  category: \"marks\",\n  render: () => {\n    return (\n      <MarkBtn\n        tooltip={{\n          label: {\n            key: \"marks.strikethrough\",\n            defaultLabel: \"Strike-through\"\n          },\n          shortcut: shortcutText(shortcut)\n        }}\n        markType=\"strikethrough\"\n      >\n        S\n      </MarkBtn>\n    );\n  }\n};\n\nconst _renderLeaf: InjectedRenderLeaf = {\n  renderLeaf: props => renderLeaf(props, \"strikethrough\", \"s\")\n};\n\nconst Presenter: iPresenter = {\n  leaf: _renderLeaf\n};\n\nexport function StrikethroughAddon(props: AddonProps) {\n  useLabels(props.labels);\n  useRenderLeaf(_renderLeaf);\n  useOnKeyDown({\n    pattern: shortcut,\n    handler: (event, editor) => {\n      event.preventDefault();\n      toggleFormat(editor, \"strikethrough\");\n      return true;\n    }\n  });\n  return null;\n}\n\nStrikethroughAddon.Presenter = Presenter;\n","import React from \"react\";\nimport { useFocused, useSelected, useEditor } from \"slate-react\";\nimport { PlaceholderHint } from \"../../placeholder-hint\";\nimport { Editor } from \"slate\";\nimport { useLabels, ChiefRenderElementProps } from \"../../chief\";\n\nexport const Heading = (props: ChiefRenderElementProps) => {\n  const editor = useEditor();\n  const isFocused = useFocused();\n  const isSelected = useSelected();\n  const defaultPlaceholderTexts = {\n    h1: \"Heading 1\",\n    h2: \"Heading 2\",\n    h3: \"Heading 3\",\n    h4: \"Heading 4\",\n    h5: \"Heading 5\",\n    h6: \"Heading 6\"\n  };\n  const [getLabel] = useLabels();\n  let placeholder = getLabel({\n    key: `elements.heading.${props.element.type}.placeholder`,\n    defaultLabel: defaultPlaceholderTexts[props.element.type]\n  });\n\n  return React.createElement(\n    props.element.type,\n    props.attributes,\n    <PlaceholderHint\n      isEmpty={Editor.isEmpty(editor, props.element)}\n      placeholder={isFocused && isSelected ? placeholder : undefined}\n    >\n      {props.children}\n    </PlaceholderHint>\n  );\n};\n","import React from \"react\";\nimport { AddonProps } from \"../../addon\";\nimport { Heading } from \"./Heading\";\nimport { Transforms, Editor, Range, Element } from \"slate\";\nimport { useSlate, ReactEditor } from \"slate-react\";\nimport { isNodeActive } from \"../../utils\";\nimport { ToolbarBtn } from \"../../ToolbarBtn\";\nimport { useRenderElement } from \"../../chief/hooks/use-render-element\";\nimport { useOnKeyDown } from \"../../chief/hooks/use-on-key-down\";\nimport { RichEditor } from \"../../chief/editor\";\nimport { Control } from \"../../control\";\nimport { iPresenter } from \"../../chief/chief-presentation\";\n\nexport const headingTypes = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];\n\nexport const headingBlockControls: Control[] = [\n  {\n    category: \"headings\",\n    render: editor => (\n      <React.Fragment>\n        {headingTypes.map((it, i) => (\n          <ToolbarBtn\n            isActive={isNodeActive(editor, it)}\n            onMouseDown={(\n              e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n            ) => {\n              ReactEditor.focus(editor);\n              RichEditor.insertBlock(editor, it);\n            }}\n          >\n            {`H${i + 1}`}\n          </ToolbarBtn>\n        ))}\n      </React.Fragment>\n    )\n  }\n];\n\nexport const headingContextControls: Control[] = [\n  {\n    category: \"headings\",\n    render: () => (\n      <React.Fragment>\n        {headingTypes.map((it, i) => (\n          <HeadingBtn headingType={it}>{`H${i + 1}`}</HeadingBtn>\n        ))}\n      </React.Fragment>\n    )\n  }\n];\n\nconst Presenter: iPresenter = {\n  element: {\n    typeMatch: headingTypes,\n    renderElement: props =>\n      React.createElement(props.element.type, null, props.children)\n  }\n};\n\nexport function HeadingsAddon(props: AddonProps) {\n  useRenderElement({\n    typeMatch: headingTypes,\n    renderElement: props => <Heading {...props} />\n  });\n  useOnKeyDown({\n    pattern: \"Enter\",\n    handler: (event, editor) => {\n      const { selection } = editor;\n      if (selection && Range.isCollapsed(selection)) {\n        const [match] = Editor.nodes(editor, {\n          match: n =>\n            typeof n.type === \"string\" &&\n            Boolean(n.type?.match(/(h[1-6])/))\n        });\n        if (match) {\n          event.preventDefault();\n          const [node] = match;\n          if (Element.isElement(node) && Editor.isEmpty(editor, node)) {\n            Transforms.setNodes(editor, { type: \"paragraph\" });\n          } else {\n            Transforms.insertNodes(editor, {\n              type: \"paragraph\",\n              children: [{ text: \"\" }]\n            });\n          }\n          return true;\n        }\n      }\n      return false;\n    }\n  });\n  return null;\n}\n\nfunction toggleHeading(editor: Editor, heading: string) {\n  const isHeaderOfType = isHeadingType(editor, heading);\n  if (isHeaderOfType) {\n    Transforms.setNodes(editor, {\n      type: \"paragraph\"\n    });\n  } else {\n    Transforms.setNodes(editor, {\n      type: heading\n    });\n  }\n}\n\nexport const isHeadingType = (editor: Editor, header: string) => {\n  const [match] = Editor.nodes(editor, {\n    match: n => n.type === header\n  });\n  return Boolean(match);\n};\n\nfunction insertHeader(editor: Editor, heading: string) {\n  Transforms.insertNodes(editor, {\n    type: heading,\n    children: [{ text: \"\" }]\n  });\n}\n\nfunction HeadingBtn(props: { headingType: string; children: React.ReactNode }) {\n  const editor = useSlate();\n  const isActive = isHeadingType(editor, props.headingType);\n  return (\n    <ToolbarBtn\n      isActive={isActive}\n      onMouseDown={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        toggleHeading(editor, props.headingType);\n      }}\n    >\n      {props.children}\n    </ToolbarBtn>\n  );\n}\n\nHeadingsAddon.Presenter = Presenter;\n","import React, {\n  useEffect,\n  useState,\n  useRef,\n  useContext,\n  useCallback\n} from \"react\";\nimport { ReactEditor, useSlate, useEditor } from \"slate-react\";\nimport { Editor, Range, Node, Transforms, RangeRef } from \"slate\";\nimport { Popper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\nimport { useOnClickOutside, getNodeFromSelection } from \"../../utils\";\nimport { useDecoration } from \"../../chief/hooks/use-decoration\";\nimport { useRenderLeaf } from \"../../chief\";\nimport { useChief } from \"../../chief/hooks/use-chief\";\n\nexport const deselect = Transforms.deselect;\nTransforms.deselect = (...args) => {\n  // We disable the default deselect.\n};\n\ntype HoverToolContext = {\n  activeNode?: Node;\n  enabled: boolean;\n  saveSelection: (selection: Range | null) => () => void;\n  perform: (fn: (selection: Range) => void) => void;\n};\n\nconst hoverToolContext = React.createContext<HoverToolContext | undefined>(\n  undefined\n);\n\nfunction useHighlightSelection(\n  selection: Range | null | undefined,\n  style: React.CSSProperties\n) {\n  useRenderLeaf(\n    {\n      renderLeaf: props => {\n        return (\n          <span\n            style={props.leaf.highlightSelection ? style : undefined}\n            {...props.attributes}\n          >\n            {props.children}\n          </span>\n        );\n      }\n    },\n    [selection]\n  );\n\n  useDecoration(\n    {\n      decorator: ([node]) => {\n        const ranges: Range[] = [];\n        if (selection && Node.has(node, selection.anchor.path)) {\n          ranges.push({ ...selection, highlightSelection: true });\n        }\n        return ranges;\n      }\n    },\n    [selection]\n  );\n}\n\nfunction useProvideContext() {\n  const editor = useSlate();\n  const { selection } = editor;\n  const [ctx, setCtx] = useState<HoverToolContext>({\n    enabled: false,\n    saveSelection: () => () => null,\n    perform: () => () => null\n  });\n  const [savedSelection, setSaveSelection] = useState<RangeRef | null>(null);\n  const isEditorFocused = ReactEditor.isFocused(editor);\n  const isCollapsed = selection && Range.isCollapsed(selection);\n  const isEmpty = selection && Editor.string(editor, selection) === \"\";\n  const currentNode = getNodeFromSelection(editor, selection);\n  const isVoid = Editor.isVoid(editor, currentNode);\n  const isReadOnly = useChief().readOnly;\n  useHighlightSelection(savedSelection?.current, {\n    backgroundColor: \"#969696\"\n  });\n\n  // console.log({\n  //   isEditorFocused,\n  //   selection,\n  //   isCollapsed,\n  //   isEmpty,\n  //   isVoid,\n  //   ...ctx\n  // });\n\n  const setEnabled = useCallback((enabled: boolean) => {\n    setCtx(ctx => ({\n      ...ctx,\n      enabled\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (isReadOnly) {\n      setEnabled(false);\n    } else if (ctx.enabled) {\n      if (!savedSelection?.current && isCollapsed && !isVoid) {\n        setEnabled(false);\n      }\n    } else {\n      if (isEditorFocused) {\n        if (isCollapsed && isVoid) {\n          setEnabled(true);\n        } else if (!isCollapsed && !isEmpty) {\n          setEnabled(true);\n        }\n      }\n    }\n  }, [isEditorFocused, isCollapsed, isEmpty, isVoid]);\n\n  const editorRef = useRef(editor);\n  editorRef.current = editor;\n\n  const saveSelection = useCallback((selection: Range | null) => {\n    if (selection) {\n      const sRef = Editor.rangeRef(editor, selection);\n      setSaveSelection(sRef);\n      return () => {\n        if (sRef.current) {\n          setTimeout(() => {\n            ReactEditor.focus(editorRef.current);\n            Transforms.select(editorRef.current, sRef.current!);\n            setSaveSelection(null);\n            sRef.unref();\n          }, 0);\n        }\n      };\n    }\n    return () => null;\n  }, []);\n\n  useEffect(() => setCtx(ctx => ({ ...ctx, saveSelection })), []);\n\n  const perform = useCallback(\n    (fn: (selection: Range) => void) => {\n      if (savedSelection && savedSelection.current) {\n        Transforms.select(editorRef.current, savedSelection.current);\n        fn(savedSelection.current);\n      }\n    },\n    [savedSelection]\n  );\n  useEffect(() => setCtx(ctx => ({ ...ctx, perform })), [perform]);\n\n  return { ctx, setEnabled };\n}\n\nexport function useHoverTool() {\n  const ctx = useContext(hoverToolContext);\n  if (ctx === undefined) {\n    throw new Error(\"useHoverTool must be within a <HoverToolProvider/>\");\n  }\n  return ctx;\n}\n\nexport function HoverToolProvider(props: {\n  children?: React.ReactNode;\n  hoverTool: React.ReactNode;\n}) {\n  const { ctx, setEnabled } = useProvideContext();\n  return (\n    <hoverToolContext.Provider value={ctx}>\n      <HoveringTool\n        onChangeEnabled={enabled => setEnabled(enabled)}\n        enabled={ctx.enabled}\n      >\n        {props.hoverTool}\n      </HoveringTool>\n      {props.children}\n    </hoverToolContext.Provider>\n  );\n}\n\nexport const HoveringTool = (\n  props: {\n    children?: React.ReactNode;\n    enabled: boolean;\n    onChangeEnabled: (enabled: boolean) => void;\n  } & React.HTMLProps<HTMLDivElement>\n) => {\n  const { children, enabled, onChangeEnabled, ...otherProps } = props;\n  const editor = useSlate();\n  const { selection } = editor;\n  const [deltaOffset, setDeltaOffset] = useState(-1);\n  const currentNode = getNodeFromSelection(editor, selection);\n\n  useEffect(() => {\n    const deltaoffset = selection\n      ? selection.focus.offset - selection.anchor.offset\n      : -1;\n    setDeltaOffset(deltaoffset);\n  }, [selection]);\n\n  const toolRef = useRef(null);\n  const [_v, _setV] = useState<VirtualElement>({\n    getBoundingClientRect: () => ({\n      top: -1000,\n      left: -1000,\n      bottom: 0,\n      right: 0,\n      width: 1,\n      height: 1\n    })\n  });\n\n  useOnClickOutside(toolRef, e => {\n    if (currentNode) {\n      const domNode = ReactEditor.toDOMNode(editor, currentNode);\n      if (e.target && domNode.contains(e.target as globalThis.Node)) {\n        return;\n      }\n    }\n    onChangeEnabled(false);\n  });\n\n  useEffect(() => {\n    if (enabled) {\n      const isVoid = Editor.isVoid(editor, currentNode);\n      if (isVoid && currentNode) {\n        try {\n          const domNode = ReactEditor.toDOMNode(editor, currentNode);\n          _setV({\n            getBoundingClientRect: () => domNode.getBoundingClientRect()\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      } else {\n        try {\n          const domSelection = window.getSelection();\n          if (domSelection && domSelection.rangeCount > 0) {\n            const domRange = domSelection.getRangeAt(0);\n            if (domRange && deltaOffset !== -1) {\n              _setV({\n                getBoundingClientRect: () => domRange.getBoundingClientRect()\n              });\n            }\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }\n  }, [enabled, deltaOffset, selection, currentNode]);\n\n  if (!enabled || !children) {\n    return null;\n  }\n\n  return (\n    <Popper\n      modifiers={[\n        {\n          name: \"offset\",\n          options: {\n            offset: [0, 10]\n          }\n        }\n      ]}\n      placement=\"top-end\"\n      referenceElement={_v}\n    >\n      {({ ref, style, placement, arrowProps }) => (\n        <div\n          ref={ref}\n          style={{ ...style, zIndex: 10 }}\n          data-placement={placement}\n        >\n          <div ref={toolRef} {...otherProps}>\n            {children}\n          </div>\n          <div ref={arrowProps.ref} style={arrowProps.style} />\n        </div>\n      )}\n    </Popper>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useChief } from \"./use-chief\";\nimport { InjectedDecorator } from \"../chief\";\n\nexport function useDecoration(decoration: InjectedDecorator, deps: any[] = []) {\n  const chief = useChief();\n  useEffect(() => {\n    chief.injectDecoration(decoration);\n    return () => chief.removeDecoration(decoration);\n  }, deps);\n}\n","import React, { useState, useRef } from \"react\";\nimport { Popper, Manager, Reference } from \"react-popper\";\nimport { useOnClickOutside } from \"./utils\";\nimport { useOnKeyDown } from \"./chief\";\n\nexport function ToolBtnPopup(props: {\n  shortcut?: string;\n  renderContent: (setShow: (show: boolean) => void) => React.ReactNode;\n  renderToolBtn: (\n    props: {\n      ref: React.Ref<any>;\n      onMouseDown: (e: React.MouseEvent) => void;\n    },\n    show: boolean\n  ) => React.ReactNode;\n}) {\n  const [show, setShow] = useState(false);\n  const toolWindow = useRef(null);\n  useOnClickOutside(toolWindow, e => {\n    if (!e.defaultPrevented) {\n      setShow(false);\n    }\n    e.preventDefault();\n  });\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 27) {\n      setShow(false);\n    }\n  };\n  useOnKeyDown({\n    pattern: props.shortcut,\n    handler: () => setShow(!show)\n  });\n  return (\n    <Manager>\n      <Reference>\n        {({ ref }) =>\n          props.renderToolBtn(\n            {\n              ref,\n              onMouseDown: e => {\n                e.preventDefault();\n                setShow(!show);\n              }\n            },\n            show\n          )\n        }\n      </Reference>\n      <Popper\n        placement=\"bottom-start\"\n        modifiers={[\n          {\n            name: \"offset\",\n            options: {\n              offset: [-100, 10]\n            }\n          }\n        ]}\n      >\n        {({ ref, style, placement, arrowProps }) => (\n          <div ref={ref} style={style} data-placement={placement}>\n            {show && (\n              <div onKeyDown={handleKeyDown} ref={toolWindow}>\n                {props.renderContent(setShow)}\n              </div>\n            )}\n            <div ref={arrowProps.ref} style={arrowProps.style} />\n          </div>\n        )}\n      </Popper>\n    </Manager>\n  );\n}\n","import styled from \"styled-components\";\nimport { OverrideTheme } from \"./override-theme\";\nimport { UiWrap } from \"./ui/ui-wrap\";\n\nexport const StyledToolBase = styled(UiWrap)`\n  overflow: hidden;\n  border-radius: 3px;\n  box-shadow: rgba(15, 15, 15, 0.05) 0px 0px 0px 1px,\n    rgba(15, 15, 15, 0.1) 0px 3px 6px, rgba(15, 15, 15, 0.2) 0px 9px 24px;\n`;\n\nexport const StyledToolBox = styled(StyledToolBase)`\n  background-color: white;\n  ${props => OverrideTheme(\"StyledToolBox\", props)}\n`;\n","import styled from \"styled-components\";\n\nexport const Input = styled.input.attrs(props => ({}))`\n  &:focus {\n    outline: 0;\n  }\n  font-size: inherit;\n  line-height: inherit;\n  border: none;\n  background: none;\n  width: 100%;\n  display: block;\n  resize: none;\n  padding: 0px;\n`;\n\nexport const InputWrapper = styled.div.attrs(props => ({\n  \"data-slate-editor\": true\n}))`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  font-size: 14px;\n  line-height: 20px;\n  padding: 4px 10px;\n  position: relative;\n  border-radius: 3px;\n  box-shadow: rgba(15, 15, 15, 0.1) 0px 0px 0px 1px inset,\n    rgba(15, 15, 15, 0.1) 0px 1px 1px inset;\n  background: rgba(242, 241, 238, 0.6);\n  cursor: text;\n  flex-grow: 1;\n  flex-shrink: 1;\n  margin-right: 8px;\n  ${Input} {\n  }\n`;\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport {\n  RenderElementProps,\n  ReactEditor,\n  useSlate,\n  useEditor\n} from \"slate-react\";\nimport { Element, Editor, Transforms, Range, Node } from \"slate\";\nimport { AddonProps } from \"../../addon\";\nimport isUrl from \"is-url\";\nimport { useHoverTool } from \"../hovering-tool/hovering-tool\";\nimport { ToolBtnPopup } from \"../../ToolBtnPopup\";\nimport { useOnClickOutside } from \"../../utils\";\nimport { StyledToolBox } from \"../../StyledToolBox\";\nimport { InputWrapper, Input } from \"../../InputWrapper\";\nimport { ToolbarBtn } from \"../../ToolbarBtn\";\nimport { useRenderElement } from \"../../chief/hooks/use-render-element\";\nimport { usePlugin } from \"../../chief/hooks/use-plugin\";\nimport { useLabels } from \"../../chief/hooks/use-labels\";\nimport { Control } from \"../../control\";\nimport { ChiefElement } from \"../../chief\";\nimport { shortcutText } from \"../../shortcut\";\nimport { iPresenter } from \"../../chief/chief-presentation\";\n\nexport const isLinkELement = (element: Element) => {\n  return element.type === \"link\" && typeof element.url === \"string\";\n};\n\nexport const linkControl: Control = {\n  category: \"link\",\n  Component: LinkBtn\n};\n\nexport function LinkAddon(props: AddonProps) {\n  useLabels(props.labels);\n  usePlugin({\n    insertText: (insertText, editor) => text => {\n      if (text && isUrl(text)) {\n        wrapLink(editor, text);\n      } else {\n        insertText(text);\n      }\n    },\n    insertData: (insertData, editor) => data => {\n      const text = data.getData(\"text/plain\");\n      if (text && isUrl(text)) {\n        wrapLink(editor, text);\n      } else {\n        insertData(data);\n      }\n    },\n    isInline: isInline => element => {\n      // console.log(\"isInline, link\");\n      return isLinkELement(element) ? true : isInline(element);\n    }\n  });\n\n  useRenderElement<{ url: string } & ChiefElement>({\n    typeMatch: \"link\",\n    renderElement: props => (\n      <a {...props.attributes} href={props.element.url}>\n        {props.children}\n      </a>\n    )\n  });\n  return null;\n}\n\nconst Presenter: iPresenter<{ url: string } & ChiefElement> = {\n  element: {\n    typeMatch: \"link\",\n    renderElement: props => <a href={props.element.url}>{props.children}</a>\n  }\n};\n\nLinkAddon.Presenter = Presenter;\n\nLinkAddon.Control = linkControl;\n\nexport const insertLink = (editor: Editor, url: string) => {\n  if (editor.selection) {\n    wrapLink(editor, url);\n  }\n};\n\nexport const isLinkActive = (editor: Editor) => {\n  const [link] = Editor.nodes(editor, { match: n => n.type === \"link\" });\n  return Boolean(link);\n};\n\nconst unwrapLink = (editor: Editor) => {\n  Transforms.unwrapNodes(editor, { match: n => n.type === \"link\" });\n};\n\nconst wrapLink = (editor: Editor, url: string) => {\n  if (isLinkActive(editor)) {\n    unwrapLink(editor);\n  }\n\n  const { selection } = editor;\n  const isCollapsed = selection && Range.isCollapsed(selection);\n  const link = {\n    type: \"link\",\n    url,\n    children: isCollapsed ? [{ text: url }] : []\n  };\n\n  if (isCollapsed) {\n    Transforms.insertNodes(editor, link);\n  } else {\n    Transforms.wrapNodes(editor, link, { split: true });\n    Transforms.collapse(editor, { edge: \"end\" });\n  }\n};\n\nfunction LinkPopup(props: { onClose: () => void }) {\n  const editor = useSlate();\n  const { selection } = editor;\n  const { saveSelection } = useHoverTool();\n  useEffect(() => {\n    return saveSelection(selection);\n  }, []);\n  const linkWrapperRef = useRef<HTMLDivElement>(null);\n  useOnClickOutside(linkWrapperRef, e => {\n    props.onClose();\n  });\n  let linkNode: Node | null = null;\n  if (selection) {\n    const [_linkNode] = Editor.nodes(editor, {\n      at: selection,\n      match: n => n.type === \"link\"\n    });\n    linkNode = _linkNode && _linkNode[0];\n  }\n  const [url, setUrl] = useState(\"\");\n  useEffect(() => {\n    if (linkNode && typeof linkNode.url === \"string\") {\n      setUrl(linkNode.url);\n    }\n  }, [linkNode]);\n  const handleInsertLink = useCallback(() => {\n    debugger\n    if (url.length > 0) {\n      insertLink(editor, url);\n      props.onClose();\n    } else if (\n      linkNode &&\n      typeof linkNode.url === \"string\" &&\n      linkNode.url.length > 0\n    ) {\n      unwrapLink(editor);\n      props.onClose();\n    }\n  }, [url]);\n\n  const handleUnlink = useCallback(() => {\n    unwrapLink(editor);\n    props.onClose();\n  }, [url]);\n\n  const [getLabel] = useLabels();\n\n  return (\n    <form onSubmit={handleInsertLink}>\n      <div\n        ref={linkWrapperRef}\n        style={{\n          padding: 9,\n          display: \"flex\",\n          minWidth: 400,\n          flexDirection: \"row\"\n        }}\n      >\n        <InputWrapper>\n          <Input\n            value={url}\n            onChange={(e: React.FormEvent<HTMLInputElement>) =>\n              setUrl(e.currentTarget.value)\n            }\n            placeholder={getLabel({\n              key: \"elements.link.placeholder\",\n              defaultLabel: \"Paste or type your link here\"\n            })}\n            autoFocus\n          />\n        </InputWrapper>\n        <ToolbarBtn\n          rounded\n          disabled={url.length === 0}\n          onMouseDown={handleInsertLink}\n        >\n          {getLabel({\n            key: \"elements.link.btn.link\",\n            defaultLabel: \"Link\"\n          })}\n        </ToolbarBtn>\n        <ToolbarBtn\n          rounded\n          disabled={\n            !isLinkActive(editor)\n            // || (linkNode &&\n            //   typeof linkNode.url === \"string\" &&\n            //   linkNode.url.length > 0)\n          }\n          onMouseDown={handleUnlink}\n        >\n          {getLabel({\n            key: \"elements.link.btn.unlink\",\n            defaultLabel: \"Unlink\"\n          })}\n        </ToolbarBtn>\n      </div>\n    </form>\n  );\n}\n\nexport function LinkBtn() {\n  const editor = useEditor();\n  const isActive = isLinkActive(editor);\n  return (\n    <ToolBtnPopup\n      shortcut={\"mod+k\"}\n      renderContent={setShow => (\n        <StyledToolBox>\n          <LinkPopup onClose={() => setShow(false)}></LinkPopup>\n        </StyledToolBox>\n      )}\n      renderToolBtn={(tprops, show) => (\n        <ToolbarBtn\n          tooltip={{\n            label: {\n              key: \"elements.link\",\n              defaultLabel: \"Add link\"\n            },\n            shortcut: shortcutText(\"mod+k\")\n          }}\n          {...tprops}\n          isActive={isActive || show}\n        >\n          Link\n        </ToolbarBtn>\n      )}\n    />\n  );\n}\n","import { AddonProps } from \"../../addon\";\nimport { useOnKeyDown } from \"../../chief/hooks/use-on-key-down\";\nimport { Range } from \"slate\";\n\nexport function PreventNewlineAddon(props: AddonProps) {\n  useOnKeyDown({\n    pattern: \"enter+shift\",\n    handler: (event, editor) => {\n      if (editor.selection && Range.isCollapsed(editor.selection)) {\n        event.preventDefault();\n        event.stopPropagation();\n        editor.insertText(\"\\n\");\n        return true;\n      }\n      return false;\n    }\n  });\n  return null;\n}\n","import { Editor, Transforms, Range } from \"slate\";\nimport { usePlugin } from \"../../chief/hooks/use-plugin\";\n\nexport function ResetToParagraphAddon() {\n  usePlugin({\n    deleteBackward: (deleteBackward, editor) => (...args) => {\n      const { selection } = editor;\n      if (selection && Range.isCollapsed(selection)) {\n        const [parent, path] = Editor.parent(editor, selection);\n        const isParagraph = parent.type === \"paragraph\";\n        if (\n          path.length === 1 &&\n          !isParagraph &&\n          selection &&\n          selection.focus.offset === 0\n        ) {\n          return Transforms.setNodes(editor, { type: \"paragraph\" });\n        }\n      }\n      return deleteBackward(...args);\n    }\n  });\n  return null;\n}\n","import React from \"react\";\nimport { AddonProps } from \"../../addon\";\nimport { useLabels } from \"../../chief/hooks/use-labels\";\n\nexport function LabelsAddon(props: Pick<AddonProps, \"labels\">) {\n  useLabels(props.labels);\n  return null;\n}\n","import React from \"react\";\nimport { Editor as SlateEditor, Range } from \"slate\";\nimport {\n  RenderElementProps,\n  useFocused,\n  useSelected,\n  useSlate\n} from \"slate-react\";\nimport { PlaceholderHint } from \"../../placeholder-hint\";\nimport { ChiefRenderElementProps } from \"../../chief/chief\";\n\nexport function ParagraphElement(\n  props: ChiefRenderElementProps & { placeholder?: string; hint?: string }\n) {\n  const editor = useSlate();\n  const isFocused = useFocused();\n  const isSelected = useSelected();\n  return (\n    <p {...props.attributes}>\n      <PlaceholderHint\n        isEmpty={SlateEditor.isEmpty(editor, props.element)}\n        hoverHint={props.hint}\n        placeholder={isFocused && isSelected ? props.placeholder : undefined}\n      >\n        {React.Children.map(props.children, it => it)}\n      </PlaceholderHint>\n    </p>\n  );\n}\n","import React from \"react\";\nimport { useRenderElement } from \"../../chief/hooks/use-render-element\";\nimport { Element } from \"slate\";\nimport { ParagraphElement } from \"./paragraph-element\";\nimport { useLabels, ElementTypeMatch } from \"../../chief\";\nimport { AddonProps } from \"../../addon\";\nimport { iPresenter } from \"../../chief/chief-presentation\";\n\nconst TYPE: ElementTypeMatch = \"paragraph\";\n\nexport function ParagraphAddon({\n  showHint = true,\n  showPlaceholder = true,\n  labels\n}: {\n  showHint?: boolean;\n  showPlaceholder?: boolean;\n} & AddonProps) {\n  const [getLabel] = useLabels(labels);\n  useRenderElement(\n    {\n      typeMatch: TYPE,\n      renderElement: props => (\n        <ParagraphElement\n          hint={\n            showHint\n              ? getLabel({\n                  key: \"elements.paragraph.hint\",\n                  defaultLabel: \"Click to start typing\"\n                })\n              : undefined\n          }\n          placeholder={\n            showPlaceholder\n              ? getLabel({\n                  key: \"elements.paragraph.placeholder\",\n                  defaultLabel: \"Text\"\n                })\n              : undefined\n          }\n          {...props}\n        ></ParagraphElement>\n      )\n    },\n    [getLabel]\n  );\n  return null;\n}\n\nconst ParagraphPresenter: iPresenter = {\n  element: {\n    typeMatch: TYPE,\n    renderElement: props => <p>{props.children}</p>\n  }\n};\n\nParagraphAddon.Presenter = ParagraphPresenter;\n","import React from \"react\";\nimport { AddonProps } from \"../../addon\";\nimport { renderLeaf } from \"../../leaf-renderer\";\nimport { useRenderLeaf } from \"../../chief/hooks/use-render-leaf\";\nimport { useOnKeyDown } from \"../../chief/hooks/use-on-key-down\";\nimport { useLabels } from \"../../chief/hooks/use-labels\";\nimport { MarkBtn, toggleFormat } from \"../../mark-button\";\nimport { shortcutText } from \"../../shortcut\";\nimport { Control } from \"../../control\";\nimport { ReactEditor } from \"slate-react\";\nimport { InjectedRenderLeaf } from \"../../chief\";\nimport { iPresenter } from \"../../chief/chief-presentation\";\n\nconst shortcut = \"mod+b\";\n\nconst action = (editor: ReactEditor) => toggleFormat(editor, \"bold\");\n\nexport const boldControl: Control = {\n  category: \"marks\",\n  Component: () => {\n    return (\n      <MarkBtn\n        tooltip={{\n          label: {\n            key: \"marks.bold\",\n            defaultLabel: \"Bold\"\n          },\n          shortcut: shortcutText(shortcut)\n        }}\n        markType=\"bold\"\n      >\n        B\n      </MarkBtn>\n    );\n  }\n};\n\nconst _renderLeaf: InjectedRenderLeaf = {\n  renderLeaf: props => renderLeaf(props, \"bold\", \"strong\")\n};\n\nexport function BoldAddon(props: AddonProps) {\n  // useAddonAction(\"bold\", action);\n\n  // const boldToggle = useAddonAction(\"bold\");\n\n  useLabels(props.labels);\n  useRenderLeaf(_renderLeaf);\n  useOnKeyDown({\n    pattern: shortcut,\n    handler: (event, editor) => {\n      event.preventDefault();\n      action(editor);\n      return true;\n    }\n  });\n  return null;\n}\n\nconst Presenter: iPresenter = {\n  leaf: _renderLeaf\n};\n\nBoldAddon.Control = boldControl;\n\nBoldAddon.Presenter = Presenter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HiddenFileInput = styled.input.attrs({\n  type: \"file\"\n})`\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute !important;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nexport const FileUpload = React.forwardRef<\n  HTMLInputElement,\n  Omit<React.InputHTMLAttributes<HTMLInputElement>, \"type\" | \"id\">\n>((props, ref) => <HiddenFileInput ref={ref} {...props} />);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isPresent(t) {\n    return t !== undefined && t !== null;\n}\nexports.isPresent = isPresent;\nfunction isDefined(t) {\n    return t !== undefined;\n}\nexports.isDefined = isDefined;\nfunction isFilled(t) {\n    return t !== null;\n}\nexports.isFilled = isFilled;\n//# sourceMappingURL=index.js.map","export const ImageExtensions = [\n  \"ase\",\n  \"art\",\n  \"bmp\",\n  \"blp\",\n  \"cd5\",\n  \"cit\",\n  \"cpt\",\n  \"cr2\",\n  \"cut\",\n  \"dds\",\n  \"dib\",\n  \"djvu\",\n  \"egt\",\n  \"exif\",\n  \"gif\",\n  \"gpl\",\n  \"grf\",\n  \"icns\",\n  \"ico\",\n  \"iff\",\n  \"jng\",\n  \"jpeg\",\n  \"jpg\",\n  \"jfif\",\n  \"jp2\",\n  \"jps\",\n  \"lbm\",\n  \"max\",\n  \"miff\",\n  \"mng\",\n  \"msp\",\n  \"nitf\",\n  \"ota\",\n  \"pbm\",\n  \"pc1\",\n  \"pc2\",\n  \"pc3\",\n  \"pcf\",\n  \"pcx\",\n  \"pdn\",\n  \"pgm\",\n  \"PI1\",\n  \"PI2\",\n  \"PI3\",\n  \"pict\",\n  \"pct\",\n  \"pnm\",\n  \"pns\",\n  \"ppm\",\n  \"psb\",\n  \"psd\",\n  \"pdd\",\n  \"psp\",\n  \"px\",\n  \"pxm\",\n  \"pxr\",\n  \"qfx\",\n  \"raw\",\n  \"rle\",\n  \"sct\",\n  \"sgi\",\n  \"rgb\",\n  \"int\",\n  \"bw\",\n  \"tga\",\n  \"tiff\",\n  \"tif\",\n  \"vtf\",\n  \"xbm\",\n  \"xcf\",\n  \"xpm\",\n  \"3dv\",\n  \"amf\",\n  \"ai\",\n  \"awg\",\n  \"cgm\",\n  \"cdr\",\n  \"cmx\",\n  \"dxf\",\n  \"e2d\",\n  \"egt\",\n  \"eps\",\n  \"fs\",\n  \"gbr\",\n  \"odg\",\n  \"svg\",\n  \"stl\",\n  \"vrml\",\n  \"x3d\",\n  \"sxd\",\n  \"v2d\",\n  \"vnd\",\n  \"wmf\",\n  \"emf\",\n  \"art\",\n  \"xar\",\n  \"png\",\n  \"webp\",\n  \"jxr\",\n  \"hdp\",\n  \"wdp\",\n  \"cur\",\n  \"ecw\",\n  \"iff\",\n  \"lbm\",\n  \"liff\",\n  \"nrrd\",\n  \"pam\",\n  \"pcx\",\n  \"pgf\",\n  \"sgi\",\n  \"rgb\",\n  \"rgba\",\n  \"bw\",\n  \"int\",\n  \"inta\",\n  \"sid\",\n  \"ras\",\n  \"sun\",\n  \"tga\",\n];\n","import React, { Fragment, ReactNode } from \"react\";\n\nexport const Show = (props: {\n  when: any | undefined | null;\n  children: ReactNode;\n}) => {\n  const { when, children } = props;\n  if (!Boolean(when)) {\n    return null;\n  }\n  return <Fragment>{children}</Fragment>;\n};\n","import React, { useState } from \"react\";\nimport { RenderElementProps } from \"slate-react\";\nimport { useFocused } from \"./Focused\";\nimport { Show } from \"./show\";\nimport { useChief } from \"./chief/hooks/use-chief\";\n\nexport function ElementWrapper(\n  props: RenderElementProps & {\n    attentionChildren?: React.ReactNode;\n    style?: React.CSSProperties;\n  }\n) {\n  const {\n    children,\n    element,\n    attentionChildren,\n    style,\n    attributes,\n    ...otherProps\n  } = props;\n  const { isFocusedWithin } = useFocused(element);\n  const [inside, setInside] = useState(false);\n  const { readOnly } = useChief();\n  const handleEnter = () => {\n    !readOnly && setInside(true);\n  };\n  const handleLeave = () => {\n    setInside(false);\n  };\n  return (\n    <div\n      data-slate-zero-width=\"z\"\n      onMouseEnter={handleEnter}\n      onMouseLeave={handleLeave}\n      style={{ position: \"relative\" }}\n      {...otherProps}\n    >\n      <Show when={!readOnly && (isFocusedWithin || inside)}>\n        <div style={{ position: \"absolute\", zIndex: 2, ...style }}>\n          {attentionChildren}\n        </div>\n      </Show>\n      {children}\n    </div>\n  );\n}\n","import { Node, Path } from \"slate\";\nimport { ReactEditor, useSlate } from \"slate-react\";\nimport { useState, useEffect } from \"react\";\n\nexport const useFocused = (node?: Node) => {\n  const editor = useSlate();\n  const { selection } = editor;\n  const [focus, setFocus] = useState({\n    isFocused: false,\n    isFocusedWithin: false\n  });\n  useEffect(() => {\n    if (!node) {\n      return;\n    }\n    const path = ReactEditor.findPath(editor, node);\n    let isFocused = false;\n    let isFocusedWithin = false;\n    if (selection) {\n      const { focus } = selection;\n      isFocusedWithin = Path.isDescendant(focus.path, path);\n      isFocused = Path.equals(focus.path, path);\n    }\n    setFocus({ isFocused, isFocusedWithin });\n  }, [node, selection]);\n\n  return focus;\n};\n","import styled from \"styled-components\";\nexport const ToolsWrapper = styled.div`\n  display: flex;\n`;\n","import styled from \"styled-components\";\nimport { StyledToolBase } from \"../StyledToolBox\";\nimport { ButtonBase } from \"./button-base\";\n\nexport const StyledFocusToolBtn = styled(ButtonBase)`\n  background-color: rgba(47, 47, 47, 0.67);\n  &:hover {\n    background-color: rgba(67, 67, 67, 0.67);\n  }\n  color: white;\n  border: none;\n  &:first-child {\n    border-top-left-radius: 3px;\n    border-bottom-left-radius: 3px;\n  }\n  &:last-child {\n    border-top-right-radius: 3px;\n    border-bottom-right-radius: 3px;\n  }\n  padding: 4px 8px;\n  margin: 0 1px;\n`;\n\nexport const StyledFocusToolbar = styled(StyledToolBase)`\n  background-color: transparent;\n`;\n","import React from \"react\";\nimport { RenderElementProps } from \"slate-react\";\nimport { ElementWrapper } from \"../element-wrapper\";\nimport { ToolsWrapper } from \"../ToolsWrapper\";\nimport { StyledFocusToolbar } from \"./StyledFocusToolbar\";\n\nexport function WithAttentionToolbar(\n  props: RenderElementProps & {\n    children: React.ReactNode;\n    btns: React.ReactNode;\n  }\n) {\n  const { btns, children, ...renderElementProps } = props;\n  return (\n    <ElementWrapper\n      {...renderElementProps}\n      attentionChildren={\n        <StyledFocusToolbar>\n          <ToolsWrapper>{btns}</ToolsWrapper>\n        </StyledFocusToolbar>\n      }\n      style={{ right: 0, marginTop: 5, marginRight: 5 }}\n    >\n      {children}\n    </ElementWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { ButtonBase } from \"./button-base\";\n\nexport const Button = styled(ButtonBase)`\n  background-color: ${props => props.theme.colors.primary};\n  :hover  {\n    filter: brightness(85%);\n  }\n  :active  {\n    filter: brightness(75%);\n  }\n  :disabled {\n    background-color: ${props => props.theme.colors.gray[400]};\n    color: ${props => props.theme.colors.gray[500]};\n  }\n  color: white;\n  border-radius: 0;\n  border: none;\n  padding: 4px 8px;\n`;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { Transforms } from \"slate\";\nimport { useFocused, useSelected, ReactEditor, useSlate } from \"slate-react\";\nimport { WithAttentionToolbar } from \"../../ui/WithAttentionToolbar\";\nimport { Input, InputWrapper } from \"../../InputWrapper\";\nimport isUrl from \"is-url\";\nimport { ImageElement } from \"./index\";\nimport { Button } from \"../../ui/button\";\nimport styled from \"styled-components\";\nimport { ToolBtnPopup } from \"../../ToolBtnPopup\";\nimport { StyledToolBox } from \"../../StyledToolBox\";\nimport { ToolbarBtn } from \"../../ToolbarBtn\";\nimport { StyledFocusToolBtn } from \"../../ui/StyledFocusToolbar\";\nimport { ChiefRenderElementProps } from \"../../chief/chief\";\nimport { UiWrap } from \"../../ui/ui-wrap\";\nimport ReactResizeDetector from \"react-resize-detector/lib/\";\nimport { useChief } from \"../../chief/hooks/use-chief\";\n\nexport const ImageBlock = (\n  props: ChiefRenderElementProps<ImageElement> & {\n    onOpenFileRequest?: () => void;\n    onRemoved?: (url: string | null) => void;\n  }\n) => {\n  const focused = useFocused();\n  const selected = useSelected();\n  const editor = useSlate();\n  const { readOnly } = useChief();\n  const { onOpenFileRequest, onRemoved, ...renderElementProps } = props;\n  const { element, children, attributes } = renderElementProps;\n\n  const [embedUrl, setEmbedUrl] = useState(element.url || \"\");\n  const [isReplacing, setIsReplacing] = useState(false);\n\n  const handleSubmitEmbed = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (embedUrl.length > 0) {\n        Transforms.setNodes(\n          editor,\n          {\n            url: embedUrl,\n            align: \"center\"\n          },\n          {\n            at: ReactEditor.findPath(editor, element)\n          }\n        );\n        if (isReplacing) {\n          setIsReplacing(false);\n        }\n      }\n    },\n    [embedUrl, isReplacing]\n  );\n\n  useEffect(() => {\n    if (element.url && isReplacing) {\n      setIsReplacing(false);\n    }\n  }, [element.url]);\n\n  const handleDelete = useCallback(() => {\n    onRemoved && onRemoved(element.url);\n    Transforms.delete(editor, { at: ReactEditor.findPath(editor, element) });\n  }, [element]);\n\n  const handleUpload = useCallback(() => {\n    onOpenFileRequest && onOpenFileRequest();\n  }, [onOpenFileRequest]);\n\n  const handleResize = useCallback((w, h) => {\n    Transforms.setNodes(\n      editor,\n      {\n        width: w,\n        height: h\n      },\n      {\n        at: ReactEditor.findPath(editor, element)\n      }\n    );\n  }, []);\n\n  const align = useCallback((align: ImageElement[\"align\"]) => {\n    Transforms.setNodes(\n      editor,\n      {\n        align\n      },\n      {\n        at: ReactEditor.findPath(editor, element)\n      }\n    );\n  }, []);\n\n  const toggleReplace = useCallback(() => {\n    setIsReplacing(!isReplacing);\n  }, [isReplacing]);\n\n  const handleClick = () => {\n    Transforms.select(editor, ReactEditor.findPath(editor, element));\n  };\n\n  let imageHandler = null;\n\n  if (!isReplacing && element.url) {\n    const src = element.url || \"\";\n    imageHandler = (\n      <WithAttentionToolbar\n        {...renderElementProps}\n        btns={\n          <React.Fragment>\n            <StyledFocusToolBtn onMouseDown={handleDelete}>\n              Delete\n            </StyledFocusToolBtn>\n            <ToolBtnPopup\n              renderContent={() => (\n                <StyledToolBox>\n                  {/* <ToolbarBtn>Copy address</ToolbarBtn> */}\n                  {/* <ToolbarBtn>Resize</ToolbarBtn> */}\n                  <ToolbarBtn onMouseDown={toggleReplace}>Replace</ToolbarBtn>\n                  <ToolbarBtn onMouseDown={() => align(\"left\")}>\n                    Align left\n                  </ToolbarBtn>\n                  <ToolbarBtn onMouseDown={() => align(\"center\")}>\n                    Align center\n                  </ToolbarBtn>\n                  <ToolbarBtn onMouseDown={() => align(\"right\")}>\n                    Align right\n                  </ToolbarBtn>\n                </StyledToolBox>\n              )}\n              renderToolBtn={tprops => (\n                <StyledFocusToolBtn {...tprops}>...</StyledFocusToolBtn>\n              )}\n            ></ToolBtnPopup>\n          </React.Fragment>\n        }\n      >\n        <div\n          style={{\n            position: \"relative\",\n            height: element.height,\n            display: \"flex\",\n            justifyContent:\n              props.element.align === \"center\"\n                ? \"center\"\n                : props.element.align === \"left\"\n                ? \"flex-start\"\n                : \"flex-end\"\n          }}\n          contentEditable={false}\n          onClick={handleClick}\n        >\n          <ReactResizeDetector\n            onResize={(w: number, h: number) => handleResize(w, h)}\n          >\n            <div\n              style={{\n                resize: readOnly ? \"none\" : \"both\",\n                overflow: \"auto\",\n                width: element.width,\n                height: element.height\n              }}\n            >\n              <img\n                draggable={false}\n                style={{\n                  objectFit: \"fill\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  display: \"block\"\n                }}\n                alt={element.caption}\n                src={src}\n              />\n            </div>\n          </ReactResizeDetector>\n        </div>\n        {children}\n      </WithAttentionToolbar>\n    );\n  } else {\n    imageHandler = (\n      <WithAttentionToolbar\n        {...renderElementProps}\n        btns={\n          <React.Fragment>\n            <StyledFocusToolBtn onMouseDown={handleDelete}>\n              Delete\n            </StyledFocusToolBtn>\n            {isReplacing && (\n              <StyledFocusToolBtn onMouseDown={toggleReplace}>\n                Cancel\n              </StyledFocusToolBtn>\n            )}\n          </React.Fragment>\n        }\n      >\n        <div contentEditable={false}>\n          <StyledImageEmptyContainer>\n            <h2>Insert image</h2>\n            <Button onMouseDown={handleUpload}>Upload</Button>\n            <p>Or paste a link</p>\n            <form onSubmit={handleSubmitEmbed} data-slate-editor>\n              <InputWrapper style={{ width: \"50%\" }}>\n                <Input\n                  value={embedUrl}\n                  onChange={e => setEmbedUrl(e.target.value)}\n                  placeholder=\"Paste link\"\n                ></Input>\n              </InputWrapper>\n              <br />\n              <Button disabled={embedUrl.length === 0 || !isUrl(embedUrl)}>\n                Embed\n              </Button>\n            </form>\n            {children}\n          </StyledImageEmptyContainer>\n        </div>\n      </WithAttentionToolbar>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        outline: focused && selected ? \"1px solid rgb(46, 170, 220)\" : \"none\"\n      }}\n      {...attributes}\n      contentEditable={false}\n    >\n      {imageHandler}\n    </div>\n  );\n};\n\nexport const StyledImageEmptyContainer = styled(UiWrap)`\n  background-color: ${props => props.theme.colors.gray[300]};\n  padding: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  form {\n    width: 70%;\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n  }\n  h2,\n  p {\n    color: ${props => props.theme.colors.gray[600]};\n    user-select: none;\n  }\n`;\n","import {} from \"./image-element\";\nimport React, { useRef, useEffect } from \"react\";\nimport { AddonProps } from \"../../addon\";\nimport { Element, Editor, Transforms } from \"slate\";\nimport { ReactEditor, useSlate } from \"slate-react\";\nimport { isNodeActive, getNodeFromSelection, findNodes } from \"../../utils\";\nimport { RichEditor } from \"../../chief/editor\";\nimport { FileUpload } from \"../../FileUpload\";\nimport { ToolbarBtn } from \"../../ToolbarBtn\";\nimport { ChiefElement, isChiefElement } from \"../../chief/chief\";\nimport { useRenderElement } from \"../../chief/hooks/use-render-element\";\nimport { usePlugin } from \"../../chief/hooks/use-plugin\";\nimport { isDefined, isFilled } from \"ts-is-present\";\nimport { HistoryEditor } from \"slate-history\";\nimport isUrl from \"is-url\";\nimport { ImageExtensions } from \"./ImageExtensions\";\nimport { ImageBlock } from \"./image-element\";\nimport { Control } from \"../../control\";\nimport { iPresenter } from \"../../chief\";\n\nexport interface ImageElement extends ChiefElement {\n  type: \"image\";\n  url: string | null;\n  caption?: string;\n  previewId?: number;\n  width: number;\n  height: number;\n  align: \"left\" | \"center\" | \"right\";\n}\n\nexport function isImageElement(element: unknown): element is ImageElement {\n  return isChiefElement(element) && element.type === \"image\";\n}\n\nexport const imageBlockControls: Control[] = [\n  {\n    category: \"image\",\n    render: editor => (\n      <ToolbarBtn\n        isActive={isNodeActive(editor, \"image\")}\n        onClick={() => {\n          RichEditor.insertBlock(editor, \"image\");\n          ReactEditor.focus(editor);\n        }}\n      >\n        Image\n      </ToolbarBtn>\n    )\n  }\n];\n\nexport const isImageUrl = (url: string, extensions = ImageExtensions) => {\n  if (!url) return false;\n  if (!isUrl(url)) return false;\n  const ext = new URL(url).pathname.split(\".\").pop() as string;\n  return extensions.includes(ext);\n};\n\nconst insertImage = (editor: ReactEditor, url: string) => {\n  const image = { type: \"image\", url, children: [{ text: \"\" }] };\n  Transforms.insertNodes(editor, image);\n};\n\nfunction getAllImageNodes(editor: Editor) {\n  const [...images] = findNodes(editor, n => n.type === \"image\");\n  return images.map(([node]) => node) as ImageElement[];\n}\n\nconst Presenter: iPresenter<ImageElement> = {\n  element: {\n    typeMatch: \"image\",\n    renderElement: props => (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent:\n            props.element.align === \"center\"\n              ? \"center\"\n              : props.element.align === \"left\"\n              ? \"flex-start\"\n              : \"flex-end\"\n        }}\n      >\n        <img\n          style={{\n            objectFit: \"fill\",\n            width: props.element.width,\n            height: props.element.height,\n            display: \"block\"\n          }}\n          alt={props.element.caption}\n          src={props.element?.url ? props.element.url : \"\"}\n        />\n      </div>\n    )\n  }\n};\n\nexport function ImageAddon(\n  props: AddonProps & {\n    onUploadRequest?: (files: globalThis.FileList | null) => Promise<string>;\n    onRemoved?: (url: string | null) => void;\n    onChange?: (images: ImageElement[]) => void;\n  }\n) {\n  const editor = useSlate();\n  const fileRef = useRef<HTMLInputElement>(null);\n\n  usePlugin({\n    isVoid: isVoid => element =>\n      isImageElement(element) && element.type === \"image\"\n        ? true\n        : isVoid(element),\n    insertData: (insertData, editor) => data => {\n      const { files } = data;\n      if (files && files.length > 0) {\n        for (const file of Array.from(files)) {\n          const reader = new FileReader();\n          const [mime] = file.type.split(\"/\");\n          if (mime === \"image\") {\n            reader.addEventListener(\"load\", () => {\n              const url = reader.result as string;\n              insertImage(editor, url);\n            });\n            reader.readAsDataURL(file);\n          }\n        }\n      } else {\n        insertData(data);\n      }\n    }\n  });\n\n  const onPreview = (dataUrl: FileReader[\"result\"]) => {\n    if (typeof dataUrl === \"string\") {\n      if (HistoryEditor.isHistoryEditor(editor)) {\n        HistoryEditor.withoutSaving(editor, () => {\n          Transforms.setNodes(editor, {\n            url: dataUrl\n          });\n        });\n      }\n    }\n  };\n\n  const handleFile = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!editor.selection) {\n      return;\n    }\n    const imageRef = Editor.rangeRef(editor, editor.selection);\n    const onUploadedSuccess = (url: string) => {\n      if (!imageRef.current) return;\n      const node = getNodeFromSelection(editor, imageRef.current);\n      if (node && isImageElement(node)) {\n        Transforms.setNodes(\n          editor,\n          {\n            url,\n            align: \"center\"\n          },\n          { at: imageRef.current! }\n        );\n        imageRef.unref();\n      }\n    };\n\n    const onUploadedFailed = () => {\n      if (!imageRef.current) return;\n      Transforms.setNodes(\n        editor,\n        {\n          // url: null,\n          error: \"failedupload\"\n        },\n        { at: imageRef.current }\n      );\n      imageRef.unref();\n    };\n\n    const files = e.target.files;\n    if (!files) {\n      return;\n    }\n    if (files.length > 0) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => onPreview(reader.result));\n      reader.readAsDataURL(file);\n      if (props.onUploadRequest) {\n        try {\n          const url = await props.onUploadRequest(files);\n          onUploadedSuccess(url);\n        } catch (err) {\n          onUploadedFailed();\n        }\n      }\n    }\n  };\n\n  let imageUrls: ImageElement[] = [];\n  if (props.onChange) {\n    imageUrls = getAllImageNodes(editor)\n      .map(it => it)\n      .filter(isDefined)\n      .filter(isFilled);\n  }\n\n  useEffect(() => {\n    props.onChange && props.onChange(imageUrls);\n  }, [JSON.stringify(imageUrls), props.onChange]);\n\n  useRenderElement<ImageElement>(\n    {\n      typeMatch: \"image\",\n      renderElement: renderElementProps => (\n        <ImageBlock\n          onOpenFileRequest={() => fileRef.current && fileRef.current.click()}\n          onRemoved={props.onRemoved}\n          {...renderElementProps}\n        />\n      )\n    },\n    [props.onRemoved]\n  );\n\n  return (\n    <FileUpload\n      accept={\"image/*\"}\n      ref={fileRef}\n      onChange={handleFile}\n      multiple={false}\n    />\n  );\n}\n\nImageAddon.Presenter = Presenter;\n","import { Editor, Transforms, Node } from \"slate\";\n\nexport const toggleElement = (editor: Editor, type: string) => {\n  const isActive = isElementActive(editor, type);\n  const { selection } = editor;\n  if (!selection) {\n    return;\n  }\n  Transforms.setNodes(editor, {\n    type: isActive ? \"paragraph\" : type,\n    autoFocus: true,\n    at: selection.focus\n  });\n};\n\nexport const isElementActive = (editor: Editor, type: string) => {\n  const { selection } = editor;\n  if (!selection) {\n    return false;\n  }\n  const [match] = Editor.nodes(editor, {\n    at: selection,\n    match: n => n.type === type\n  });\n  return !!match;\n};\n\nexport const isElementEmpty = (editor: Editor) => {\n  const { selection } = editor;\n\n  if (selection) {\n    const [node] = Editor.parent(editor, selection.focus);\n    return Node.string(node).length === 0;\n  }\n  return false;\n};\n","import { ReactEditor } from \"slate-react\";\nimport { isElementActive } from \"../../element-utils\";\nimport { Transforms, Editor } from \"slate\";\nimport { TYPE_LIST_ITEM } from \".\";\n\nexport const toggleList = (editor: ReactEditor, type: string) => {\n  const isActive = isElementActive(editor, type);\n  Transforms.unwrapNodes(editor, {\n    match: n => n.type === type,\n    split: true\n  });\n  Editor.withoutNormalizing(editor, () => {\n    Transforms.setNodes(editor, {\n      type: isActive ? \"paragraph\" : TYPE_LIST_ITEM\n    });\n\n    if (!isActive) {\n      const list = {\n        type,\n        children: []\n      };\n      Transforms.wrapNodes(editor, list);\n    }\n  });\n};\n","import React from \"react\";\nimport { RenderElementProps } from \"slate-react\";\n\nexport const renderElement = (\n  props: RenderElementProps,\n  elementType: string,\n  reactType: Parameters<typeof React.createElement>[\"0\"],\n  addionalProps?: any\n) => {\n  const { children, attributes, element } = props;\n  if (element.type === elementType) {\n    return React.createElement(\n      reactType,\n      { ...attributes, ...addionalProps },\n      children\n    );\n  }\n  return undefined;\n};\n","import { ReactEditor, useSlate } from \"slate-react\";\nimport { Point, Editor, Range, Node } from \"slate\";\nimport { ChiefElement, isChiefElement } from \"./chief\";\n\ninterface ChiefState {\n  editor: ReactEditor;\n  element?: ChiefElement | Editor | undefined;\n  elementType?: string;\n  point?: Point;\n  isElementEmpty: boolean;\n  selection?: Range | null;\n  isSelectionCollapsed: boolean;\n  isSelectionExpanded: boolean;\n}\n\nexport function getState(editor: ReactEditor): ChiefState {\n  const { selection } = editor;\n  const point = selection ? selection.focus : undefined;\n  const [element] = point ? Editor.parent(editor, point) : [];\n\n  let isSelectionExpanded = false;\n  let isSelectionCollapsed = true;\n  if (selection) {\n    isSelectionExpanded = Range.isExpanded(selection);\n    isSelectionCollapsed = Range.isCollapsed(selection);\n  }\n\n  let isElementEmpty = true;\n\n  if (element) {\n    isElementEmpty = Node.string(element).length == 0;\n  }\n  let elementType: string | undefined = undefined;\n\n  if (element && isChiefElement(element)) {\n    elementType = element.type;\n  }\n\n  return {\n    editor,\n    // TODO:: THIS\n    // @ts-ignore\n    element,\n    elementType,\n    point,\n    selection,\n    isElementEmpty,\n    isSelectionExpanded,\n    isSelectionCollapsed\n  };\n}\n","import React from \"react\";\nimport { toggleList } from \"./transforms\";\nimport { ReactEditor, useSlate } from \"slate-react\";\nimport { isNodeActive } from \"../../utils\";\nimport { Control } from \"../../control\";\nimport { ToolbarBtn } from \"../../ToolbarBtn\";\nimport { TYPE_ORDERED_LIST, TYPE_UNORDERED_LIST } from \"./index\";\n\nexport const listControl: Control = {\n  category: \"lists\",\n  Component: () => {\n    const editor = useSlate();\n    return (\n      <React.Fragment>\n        <ToolbarBtn\n          isActive={isNodeActive(editor, TYPE_ORDERED_LIST)}\n          onClick={() => {\n            toggleList(editor, TYPE_ORDERED_LIST);\n            ReactEditor.focus(editor);\n          }}\n        >\n          OL\n        </ToolbarBtn>\n        <ToolbarBtn\n          isActive={isNodeActive(editor, TYPE_UNORDERED_LIST)}\n          onClick={() => {\n            toggleList(editor, TYPE_UNORDERED_LIST);\n            ReactEditor.focus(editor);\n          }}\n        >\n          UL\n        </ToolbarBtn>\n      </React.Fragment>\n    );\n  }\n};\n","import { toggleList } from \"./transforms\";\nimport { ChiefElement, InjectedRenderElement } from \"../../chief/chief\";\nimport { useRenderElement } from \"../../chief/hooks/use-render-element\";\nimport { useOnKeyDown } from \"../../chief/hooks/use-on-key-down\";\nimport { usePlugin } from \"../../chief/hooks/use-plugin\";\nimport { renderElement } from \"../../element-renderer\";\nimport { Editor, Transforms, Element, Range } from \"slate\";\nimport { ReactEditor } from \"slate-react\";\nimport { isElementEmpty } from \"../../element-utils\";\nimport { getState } from \"../../chief/chief-state\";\nimport { getAncestor, getActiveNode } from \"../../utils\";\nimport { AddonProps } from \"../../addon\";\nimport { listControl } from \"./controls\";\nimport styled, { css } from \"styled-components\";\nimport { useDecoration } from \"../../chief/hooks/use-decoration\";\nimport { iPresenter } from \"../../chief\";\n\nexport const TYPE_LIST_ITEM = \"list-item\";\nexport const TYPE_UNORDERED_LIST = \"unordered-list\";\nexport const TYPE_ORDERED_LIST = \"ordered-list\";\nexport const LIST_TYPES = [\n  TYPE_LIST_ITEM,\n  TYPE_UNORDERED_LIST,\n  TYPE_ORDERED_LIST\n];\n\ntype ListElement = {} & ChiefElement;\n\nconst Ul = styled.ul`\n  margin: 0;\n  padding-inline-start: 25px;\n  ul ul ul ul,\n  ul {\n    list-style: square outside none;\n  }\n\n  ul ul ul ul ul,\n  ul ul {\n    list-style: circle outside none;\n  }\n\n  ul ul ul ul ul ul,\n  ul ul ul {\n    list-style: disc outside none;\n  }\n`;\nconst Ol = styled.ol`\n  margin: 0;\n  padding-inline-start: 25px;\n  ol ol ol ol,\n  ol {\n    list-style: decimal outside none;\n  }\n  ol ol ol ol ol,\n  ol ol {\n    list-style: lower-latin outside none;\n  }\n  ol ol ol ol ol ol,\n  ol ol ol {\n    list-style: lower-roman outside none;\n  }\n`;\n\nconst Li = styled.li``;\n\nconst _renderElement: InjectedRenderElement = {\n  typeMatch: LIST_TYPES,\n  renderElement: props => {\n    switch (props.element.type) {\n      case TYPE_UNORDERED_LIST:\n        return renderElement(props, props.element.type, Ul);\n      case TYPE_ORDERED_LIST:\n        return renderElement(props, props.element.type, Ol);\n      default:\n        return renderElement(props, TYPE_LIST_ITEM, Li);\n    }\n  }\n};\n\nconst Presenter: iPresenter = {\n  element: _renderElement\n};\n\nexport function ListsAddon(props: AddonProps) {\n  usePlugin({\n    normalizeNode: (normalizeNode, editor) => ([node, path]) => {\n      if (node.type === TYPE_LIST_ITEM) {\n        const [parent] = Editor.parent(editor, path);\n        if (\n          parent &&\n          ![TYPE_ORDERED_LIST, TYPE_UNORDERED_LIST].includes(\n            parent.type as string\n          )\n        ) {\n          Transforms.setNodes(editor, { type: \"paragraph\" }, { at: path });\n        }\n      }\n      return normalizeNode([node, path]);\n    }\n  });\n\n  useRenderElement<ListElement>(_renderElement);\n\n  useOnKeyDown({\n    pattern: \"enter\",\n    handler: (e, editor) => {\n      const { elementType, element } = getState(editor);\n      if (elementType !== TYPE_LIST_ITEM) {\n        return false;\n      }\n      let ancestor = getAncestor(editor, element as Element, 1);\n\n      if (\n        !ancestor ||\n        ![TYPE_ORDERED_LIST, TYPE_UNORDERED_LIST].includes(\n          ancestor!.type as string\n        )\n      ) {\n        return false;\n      }\n      e.preventDefault();\n      if (!isElementEmpty(editor)) {\n        Editor.withoutNormalizing(editor, () => {\n          Transforms.insertNodes(editor, {\n            type: TYPE_LIST_ITEM,\n            children: [{ text: \"\" }]\n          });\n        });\n      } else {\n        const active = getActiveNode(editor);\n        if (!active) {\n          return false;\n        }\n        const list = getAncestor(editor, active, 1) as Element;\n        const listParent = getAncestor(editor, active, 2);\n\n        if (listParent && listParent.children[0].type === TYPE_LIST_ITEM) {\n          //2. If nested then unwrap and move left\n          Transforms.unwrapNodes(editor, {\n            match: n => n.type === list.type,\n            split: true\n          });\n        } else {\n          //3. At top level so cannot unwrap, insert new paragraph and break from list\n          toggleList(editor, list.type as string);\n        }\n      }\n\n      return true;\n    }\n  });\n  useOnKeyDown({\n    pattern: \"tab\",\n    handler: (e, editor) => {\n      const { elementType, element } = getState(editor);\n      if (!element || elementType !== TYPE_LIST_ITEM) {\n        return false;\n      }\n\n      let ancestor = getAncestor(editor, element, 1);\n      if (\n        !ancestor ||\n        ![TYPE_ORDERED_LIST, TYPE_UNORDERED_LIST].includes(\n          ancestor!.type as string\n        )\n      ) {\n        return false;\n      }\n\n      if (ancestor.children.length > 1) {\n        e.preventDefault();\n        const index = ancestor?.children.indexOf(element) - 1;\n        if (ancestor.children[index].type !== TYPE_LIST_ITEM) {\n          // 3a. tab = move right. If the node above is a list then append to it.\n          const otherList = ancestor.children[index] as Element;\n          const destination = ReactEditor.findPath(\n            editor,\n            otherList.children[otherList.children.length - 1]\n          );\n          destination[destination.length - 1]++;\n          Transforms.moveNodes(editor, {\n            to: destination\n          });\n        } else {\n          // 3b. otherwise, wrap the item in a new list and nest in parent\n          Transforms.wrapNodes(editor, { type: ancestor.type, children: [] });\n        }\n        return true;\n      }\n      return false;\n    }\n  });\n  useOnKeyDown({\n    pattern: \"shift+tab\",\n    handler: (e, editor) => {\n      const { elementType, element } = getState(editor);\n      if (!element || elementType !== TYPE_LIST_ITEM) {\n        return false;\n      }\n\n      let ancestor = getAncestor(editor, element, 1);\n      if (\n        !ancestor ||\n        ![TYPE_ORDERED_LIST, TYPE_UNORDERED_LIST].includes(\n          ancestor!.type as string\n        )\n      ) {\n        return false;\n      }\n\n      if (e.shiftKey) {\n        let ancestor = getAncestor(editor, element, 2);\n        // 1. tab+shift = move left to grandparent list if nested\n        if (ancestor?.children.find(child => child.type === TYPE_LIST_ITEM)) {\n          Transforms.liftNodes(editor);\n        } else {\n          const options = {\n            at: ReactEditor.findPath(editor, element)\n          };\n          // 2. tab+shift = unwrap and move to below parent if no grandparent list\n          if (element?.children.length == 1) {\n            Transforms.setNodes(editor, { type: \"paragraph\" }, options);\n          } else {\n            Transforms.unwrapNodes(editor, options);\n          }\n        }\n        e.preventDefault();\n        return true;\n      }\n      return false;\n    }\n  });\n  return null;\n}\n\nListsAddon.Control = listControl;\nListsAddon.Presenter = Presenter;\n\n","import { AddonProps } from \"../../addon\";\nimport { useOnKeyDown } from \"../../chief/hooks/use-on-key-down\";\n\nexport function BlockTabAddon(props: AddonProps) {\n  useOnKeyDown({\n    pattern: \"tab\",\n    priority: \"low\",\n    handler: e => {\n      e.preventDefault();\n      return true;\n    }\n  });\n  return null;\n}\n","import styled from \"styled-components\";\nexport const ToolDivider = styled.div`\n  width: 1px;\n  background-color: #eaeaea;\n  ${props =>\n    props.theme.preferDarkOption &&\n    `\n@media (prefers-color-scheme: dark) {\n  background-color: #737373;\n  }`}\n`;\n","import React from \"react\";\nimport groupBy from \"lodash/groupBy\";\nimport { ReactEditor, useSlate } from \"slate-react\";\nimport { StyledToolbarBtn } from \"../../ui/styled-toolbar-btn\";\nimport { StyledToolBox } from \"../../StyledToolBox\";\nimport { ToolDivider } from \"../../ToolDivider\";\nimport { ToolsWrapper } from \"../../ToolsWrapper\";\nimport { isNodeActive } from \"../../utils\";\nimport { Control } from \"../../control\";\nimport { RichEditor } from \"../../chief/editor\";\nimport { ToolbarBtn } from \"../../ToolbarBtn\";\n\nexport function BlockInsertControls(props: { controls: Control[] }) {\n  const editor = useSlate();\n  const controls = props.controls;\n  if (controls.length > 0) {\n    const grouped = groupBy(controls, \"category\");\n    return (\n      <StyledToolBox>\n        <ToolsWrapper>\n          {Object.entries(grouped).map(([k, groupedControls]) => (\n            <React.Fragment>\n              {groupedControls.map((control, i) => {\n                if (control.Component) {\n                  return <control.Component key={i} />;\n                }\n                const renderButton = control.render;\n                return typeof renderButton === \"function\"\n                  ? renderButton(editor)\n                  : renderButton;\n              })}\n              <ToolDivider />\n            </React.Fragment>\n          ))}\n          <ToolDivider />\n          <ToolbarBtn\n            isActive={isNodeActive(editor, \"paragraph\")}\n            onMouseDown={() => {\n              RichEditor.insertBlock(editor, \"paragraph\");\n              ReactEditor.focus(editor);\n            }}\n          >\n            Text\n          </ToolbarBtn>\n        </ToolsWrapper>\n      </StyledToolBox>\n    );\n  }\n  return null;\n}\n","import {\n  isBlockEmpty,\n  getActiveNode,\n  useOnClickOutside,\n  getAncestor\n} from \"../../utils\";\nimport React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { useSlate, ReactEditor } from \"slate-react\";\nimport { Node, Editor, Path, Transforms } from \"slate\";\nimport { Manager, Reference, Popper } from \"react-popper\";\nimport styled from \"styled-components\";\nimport { ButtonBase } from \"../../ui/button-base\";\n\nexport const BlockInsertBtn = styled(ButtonBase)`\n  user-select: none;\n  border: none;\n  background: transparent;\n  display: block;\n  width: 25px;\n  height: 25px;\n  border: 1px solid #ccc;\n  border-radius: ${25 / 2}px;\n  &:before {\n    content: \"+\";\n    font-family: Arial, Helvetica, sans-serif;\n    font-weight: normal;\n    font-size: 28px;\n    color: #ccc;\n    position: absolute;\n    top: -3px;\n    left: 4px;\n    padding: 0;\n    margin: 0;\n  }\n  &:hover {\n    &:before {\n      color: #ddd;\n    }\n  }\n  &:active {\n    &:before {\n      color: #eee;\n    }\n  }\n`;\n\nfunction useHoveredNode(editor: ReactEditor) {\n  const [node, setNode] = useState<{ node: Node; path: Path } | null>(null);\n  useEffect(() => {\n    try {\n      const [rootNode] = Editor.node(editor, {\n        anchor: Editor.start(editor, []),\n        focus: Editor.end(editor, [])\n      });\n      if (rootNode && Node.isNode(rootNode)) {\n        const firstDOMPoint = ReactEditor.toDOMNode(editor, rootNode);\n        firstDOMPoint.addEventListener(\"mousemove\", e => {\n          if (ReactEditor.hasDOMNode(editor, e.target as globalThis.Node)) {\n            const node = ReactEditor.toSlateNode(\n              editor,\n              e.target as globalThis.Node\n            );\n            const path = ReactEditor.findPath(editor, node);\n            setNode({ node, path });\n          } else {\n            setNode(null);\n          }\n        });\n      }\n    } catch (err) {\n      setNode(null);\n    }\n  }, [editor]);\n  return node;\n}\n\nexport function BlockInsert(props: { children?: React.ReactNode }) {\n  const editor = useSlate();\n  const [coords, setCoords] = useState([-1000, -1000]);\n  const [showMenu, setShowMenu] = useState(false);\n  const toolboxRef = useRef<HTMLDivElement>(null);\n  useOnClickOutside(toolboxRef, () => {\n    setShowMenu(false);\n  });\n\n  const hoveredNode = useHoveredNode(editor);\n\n  const handleBlockInsert = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      event.preventDefault();\n      event.stopPropagation();\n      if (!showMenu && hoveredNode) {\n        Transforms.select(editor, hoveredNode.path);\n      }\n      setShowMenu(!showMenu);\n      ReactEditor.focus(editor);\n    },\n    [showMenu, hoveredNode]\n  );\n\n  useEffect(() => {\n    if (hoveredNode?.node && !showMenu) {\n      try {\n        const [rootNode] = Editor.node(editor, {\n          anchor: Editor.start(editor, []),\n          focus: Editor.end(editor, [])\n        });\n        if (rootNode && Node.isNode(rootNode)) {\n          const firstDOMPoint = ReactEditor.toDOMNode(editor, rootNode);\n          const activeDOMNode = ReactEditor.toDOMNode(editor, hoveredNode.node);\n          const rect = activeDOMNode.getBoundingClientRect();\n          const top = rect.top + window.pageYOffset + rect.height / 2 - 25 / 2;\n          const left =\n            firstDOMPoint.getBoundingClientRect().left +\n            window.pageXOffset -\n            30;\n          setCoords([top, left]);\n        }\n      } catch (err) {}\n    }\n  }, [hoveredNode]);\n\n  if (\n    !hoveredNode ||\n    hoveredNode.path.length === 0 ||\n    Node.string(hoveredNode.node).length !== 0 ||\n    Editor.isVoid(editor, hoveredNode.node)\n  ) {\n    if (!showMenu) {\n      return null;\n    }\n  }\n  return (\n    <Manager>\n      <Reference>\n        {({ ref }) => (\n          <div\n            ref={ref}\n            style={{ position: \"absolute\", top: coords[0], left: coords[1] }}\n          >\n            <BlockInsertBtn onClick={handleBlockInsert} />\n          </div>\n        )}\n      </Reference>\n      {showMenu && (\n        <Popper\n          placement=\"bottom-end\"\n          modifiers={[\n            {\n              name: \"offset\",\n              options: {\n                offset: [25, 10]\n              }\n            }\n          ]}\n        >\n          {({ ref, style, placement, arrowProps }) => (\n            <div\n              ref={ref}\n              style={{ ...style, zIndex: 20 }}\n              data-placement={placement}\n              onMouseDown={e => {\n                if (!e.isDefaultPrevented()) {\n                  e.preventDefault();\n                  setShowMenu(false);\n                  ReactEditor.focus(editor);\n                  editor.selection &&\n                    Transforms.select(editor, editor.selection.focus);\n                }\n              }}\n            >\n              <div ref={toolboxRef}>{props.children}</div>\n              <div ref={arrowProps.ref} style={arrowProps.style} />\n            </div>\n          )}\n        </Popper>\n      )}\n    </Manager>\n  );\n}\n","import React from \"react\";\nimport groupBy from \"lodash/groupBy\";\nimport { Editor as SlateEditor } from \"slate\";\nimport { useSlate } from \"slate-react\";\nimport { StyledToolBox } from \"../../StyledToolBox\";\nimport { ToolDivider } from \"../../ToolDivider\";\nimport { ToolsWrapper } from \"../../ToolsWrapper\";\nimport { ChiefElement } from \"../../chief/chief\";\nimport { Control } from \"../../control\";\nimport { matchesType } from \"../../chief/utils/matches-type\";\n\nexport function HoverToolControls(props: { controls: Control[]; }) {\n  const { controls } = props;\n  const editor = useSlate();\n  const { selection } = editor;\n  if (selection) {\n    const eligableControls = controls.filter(control => {\n      const [match] = SlateEditor.nodes(editor, {\n        match: n => {\n          if (control.typeMatch && typeof n.type === \"string\") {\n            if (matchesType(n as ChiefElement, control.typeMatch)) {\n              return true;\n            }\n          }\n          else if (!control.typeMatch &&\n            !SlateEditor.isVoid(editor, n) &&\n            typeof n.type === \"string\") {\n            return true;\n          }\n          return false;\n        }\n      });\n      return Boolean(match);\n    });\n    if (eligableControls.length > 0) {\n      const groupedControls = groupBy(eligableControls, \"category\");\n      return (\n        <StyledToolBox>\n          <ToolsWrapper>\n            {Object.entries(groupedControls).map(([, groupedControls]) => (\n              <React.Fragment>\n                {groupedControls.map(control => {\n                  if (control.Component) {\n                    return <control.Component />;\n                  }\n                  const renderControl = control.render;\n                  return typeof renderControl === \"function\"\n                    ? renderControl(editor)\n                    : renderControl;\n                })}\n                <ToolDivider />\n              </React.Fragment>\n            ))}\n          </ToolsWrapper>\n        </StyledToolBox>\n      );\n    }\n  }\n  return null;\n}\n","import React from \"react\";\nimport { AddonProps } from \"../../addon\";\nimport { useRenderLeaf } from \"../../chief\";\n\nexport function TextColorAddon(props: AddonProps) {\n  useRenderLeaf({\n    renderLeaf: props => {\n      if (typeof props.leaf[\"color\"] === \"string\")\n        return (\n          <span\n            style={{ color: props.leaf[\"color\"] as string }}\n            {...props.attributes}\n          >\n            {props.children}\n          </span>\n        );\n      return undefined;\n    }\n  });\n  return null;\n}\n","import React, { useState } from \"react\";\nimport {\n  Editor,\n  Chief,\n  // Addons\n  HeadingsAddon,\n  BoldAddon,\n  ItalicAddon,\n  UnderlineAddon,\n  StrikethroughAddon,\n  ImageAddon,\n  ResetToParagraphAddon,\n  PreventNewlineAddon,\n  LinkAddon,\n  ListsAddon,\n  BlockTabAddon,\n  ParagraphAddon,\n  TextColorAddon,\n  LabelsAddon,\n  // Block toolbar addon\n  BlockInsert,\n  headingBlockControls,\n  BlockInsertControls,\n  // Custom addon creation\n  AddonProps,\n  useRenderElement,\n  InputWrapper,\n  usePlugin,\n  HoverToolProvider,\n  imageBlockControls,\n  HoverToolControls,\n  italicControl,\n  strikethroughControl,\n  underlineControl,\n  headingContextControls,\n  linkControl,\n  // Presentation\n  ChiefPresentation\n} from \"react-chief-editor\";\nimport { Node, Element } from \"slate\";\nimport styled, { css } from \"styled-components\";\n\nconst editorLabels = {\n  \"marks.bold\": \"Fed\",\n  \"marks.italic\": \"Kursiv\",\n  \"marks.strikethrough\": \"Gennemstreg\",\n  \"marks.underline\": \"Understreg\",\n  \"elements.link\": \"Link\",\n  \"elements.link.placeholder\": \"Indsæt eller skriv link\",\n  \"elements.link.btn.link\": \"Tilføj\",\n  \"elements.link.btn.unlink\": \"Fjern\",\n  \"elements.paragraph.hint\": \"Klik for at redigere\",\n  \"elements.paragraph.placeholder\": \"Tekst\",\n  \"elements.heading.h1.placeholder\": \"Overskrift 1\",\n  \"elements.heading.h2.placeholder\": \"Overskrift 2\",\n  \"elements.heading.h3.placeholder\": \"Overskrift 3\",\n  \"elements.heading.h4.placeholder\": \"Overskrift 4\",\n  \"elements.heading.h5.placeholder\": \"Overskrift 5\",\n  \"elements.heading.h6.placeholder\": \"Overskrift 6\"\n};\n\nfunction ExampleCustomAddon(props: AddonProps) {\n  usePlugin({\n    isVoid: isVoid => element =>\n      Element.isElement(element) && element.type === \"custom_void_element\"\n        ? true\n        : isVoid(element)\n  });\n\n  useRenderElement({\n    typeMatch: /custom_void_element/,\n    renderElement: (props, editor) => {\n      return (\n        <div {...props.attributes}>\n          <InputWrapper>\n            <input type=\"text\" />\n          </InputWrapper>\n          {props.children}\n        </div>\n      );\n    }\n  });\n\n  return null;\n}\n\nconst ContentStyle = styled.div`\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n  color: rgba(28, 98, 116);\n  font-size: 18px;\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: rgba(153, 109, 33);\n  }\n  a {\n    color: rgba(153, 109, 33);\n  }\n`;\n\nfunction App() {\n  const [value, setValue] = useState<Node[]>([\n    {\n      type: \"h1\",\n      children: [{ text: \"Dark\" }]\n    },\n    {\n      type: \"paragraph\",\n      children: [\n        {\n          text:\n            \"Dark er en tysksproget web-tv-serie skabt af Baran bo Odar og Jantje Friese for Netflix. Serien havde premiere på Netflix 1. december 2017. Den første sæson – på ti afsnit – blev hovedsagelig godt modtaget, med positive og negative sammenligninger med Stranger Things, en anden overnaturlig thrillerserie fra Netflix\"\n        },\n        {\n          text: \"red\",\n          color: \"red\"\n        }\n      ]\n    },\n    {\n      type: \"h1\",\n      children: [{ text: \"Images\" }]\n    },\n    {\n      type: \"image\",\n      width: 700,\n      height: 420,\n      align: \"left\",\n      url:\n        \"https://occ-0-1068-1723.1.nflxso.net/dnm/api/v6/9pS1daC2n6UGc3dUogvWIPMR_OU/AAAABSJBCX9UxJkkZH_NLhm0nynLxHTqy99ETHJuidWOohECj4qKD3kqC8kr4gk2anceRXPMLULS3hruYHK56hpZCSsWD1GqNO4GaWrot7bwzPHJqxfT.jpg?r=2af\",\n      children: [\n        {\n          text: \"asd\"\n        }\n      ]\n    },\n    {\n      type: \"h1\",\n      children: [{ text: \"Lists\" }]\n    },\n    {\n      type: \"h2\",\n      children: [{ text: \"Ordered\" }]\n    },\n    {\n      type: \"ordered-list\",\n      children: [\n        { type: \"list-item\", children: [{ text: \"Item 1\" }] },\n        { type: \"list-item\", children: [{ text: \"item 2\" }] }\n      ]\n    },\n    {\n      type: \"h2\",\n      children: [{ text: \"Unordered\" }]\n    },\n    {\n      type: \"unordered-list\",\n      children: [\n        { type: \"list-item\", children: [{ text: \"Item \" }] },\n        { type: \"list-item\", children: [{ text: \"item\" }] }\n      ]\n    }\n  ]);\n\n  const addons = (\n    <>\n      <LabelsAddon labels={editorLabels}></LabelsAddon>\n      <ParagraphAddon></ParagraphAddon>\n      <BoldAddon></BoldAddon>\n      <ItalicAddon></ItalicAddon>\n      <UnderlineAddon></UnderlineAddon>\n      <StrikethroughAddon></StrikethroughAddon>\n      <HeadingsAddon></HeadingsAddon>\n      <ImageAddon></ImageAddon>\n      <ResetToParagraphAddon></ResetToParagraphAddon>\n      <PreventNewlineAddon></PreventNewlineAddon>\n      <PreventNewlineAddon></PreventNewlineAddon>\n      <LinkAddon></LinkAddon>\n      <ListsAddon></ListsAddon>\n      <BlockTabAddon></BlockTabAddon>\n      <TextColorAddon></TextColorAddon>\n      {/* <ExampleVideoAddon labels={{ name: \"ExampleVideo\" }}></ExampleVideoAddon> */}\n    </>\n  );\n\n  console.log(value);\n\n  return (\n    <div style={{ padding: \"1em\" }}>\n      <ContentStyle>\n        <Chief\n          value={value}\n          onChange={value => setValue(value)}\n          theme={{\n            overrides: {\n              ui: css`\n                /* font-family: monospace; */\n              `\n            }\n          }}\n        >\n          {addons}\n          <div\n            style={{\n              marginLeft: 20\n            }}\n          >\n            <BlockInsert>\n              <BlockInsertControls\n                controls={[\n                  ...headingBlockControls,\n                  ...imageBlockControls,\n                  ListsAddon.Control\n                ]}\n              />\n            </BlockInsert>\n            <HoverToolProvider\n              hoverTool={\n                <HoverToolControls\n                  controls={[\n                    BoldAddon.Control,\n                    italicControl,\n                    strikethroughControl,\n                    underlineControl,\n                    ...headingContextControls,\n                    linkControl\n                  ]}\n                />\n              }\n            >\n              <Editor\n                spellCheck={false}\n                style={{ margin: 10, overflow: \"auto\", minHeight: 500 }}\n              ></Editor>\n            </HoverToolProvider>\n          </div>\n        </Chief>\n      </ContentStyle>\n      <ContentStyle>\n        <ChiefPresentation\n          value={value}\n          presenters={[\n            ParagraphAddon.Presenter,\n            BoldAddon.Presenter,\n            ItalicAddon.Presenter,\n            StrikethroughAddon.Presenter,\n            UnderlineAddon.Presenter,\n            HeadingsAddon.Presenter,\n            LinkAddon.Presenter,\n            ListsAddon.Presenter,\n            ImageAddon.Presenter\n          ]}\n        ></ChiefPresentation>\n      </ContentStyle>\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}